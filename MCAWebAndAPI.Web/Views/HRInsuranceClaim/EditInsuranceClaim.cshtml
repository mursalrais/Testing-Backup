@using MCAWebAndAPI.Model.ViewModel.Form.HR
@model InsuranceClaimVM

@{
    ViewBag.Title = "Form Edit Insurance Claim";
}

@using (Html.BeginForm("", "HRInsuranceClaim", FormMethod.Post,
                                                                                  new
                                                                                  {
                                                                                      @class = "form-horizontal",
                                                                                      enctype = "multipart/form-data"
                                                                                  }))



{
    <fieldset>

        @Html.AntiForgeryToken()
        @Html.ValidationSummary()
        @Html.HiddenFor(m => m.ProfessionalTextName)
        @Html.HiddenFor(m => m.UserPermission)
        @Html.HiddenFor(m => m.ClaimStatus)
        @Html.HiddenFor(m => m.VisibleTo)
        @Html.HiddenFor(m => m.ProfessionalID)
        @Html.HiddenFor(m => m.ID)
        <div class="col-sm-6">

            <div class="form-group">
                @Html.Bootstrap().LabelFor(m => m.ProfessionalName).Class("col-sm-4 control-label")
                <div class="col-sm-8">
                    @Html.EditorFor(m => m.ProfessionalName)
                </div>
            </div>
            <div class="form-group">
                @Html.Bootstrap().LabelFor(m => m.Position).Class("col-sm-4 control-label")
                <div class="col-sm-8">
                    @Html.DisplayFor(m => m.Position)
                </div>
            </div>
            <div class="form-group">
                @Html.Bootstrap().LabelFor(m => m.Type).Class("col-sm-4 control-label")
                <div class="col-sm-8">
                    @Html.EditorFor(m => m.Type)
                </div>
            </div>
            <div class="form-group">
                @Html.Bootstrap().LabelFor(m => m.OrganizationInsuranceID).Class("col-sm-4 control-label")
                <div class="col-sm-8">
                    @Html.DisplayFor(m => m.OrganizationInsuranceID)
                </div>
            </div>
        </div>
        <div class="col-sm-6">
            <div class="form-group">
                @Html.Bootstrap().LabelFor(m => m.ClaimDate).Class("col-sm-4 control-label")
                <div class="col-sm-8">
                    @Html.EditorFor(m => m.ClaimDate)
                </div>
            </div>
            <div class="form-group">
                @Html.Bootstrap().LabelFor(m => m.DependantName).Class("col-sm-4 control-label")
                <div class="col-sm-8">
                    @Html.EditorFor(m => m.DependantName)
                </div>
            </div>
            <div class="form-group">
                @Html.Bootstrap().LabelFor(m => m.IndividualInsuranceNumber).Class("col-sm-4 control-label")
                <div class="col-sm-8">
                    @Html.DisplayFor(m => m.IndividualInsuranceNumber)
                </div>
            </div>

        </div>

        <legend>Claim Component</legend>
        <div class="row">
            @Html.Partial("_ClaimComponentDetail", Model)
        </div>

        @if (Model.UserPermission == "HR")
        {
            <div class="row">

            </div>

            <div class="col-sm-6">
                <div class="form-group">
                    @Html.Bootstrap().LabelFor(m => m.ClaimStatusHR).Class("col-sm-4 control-label")
                    <div class="col-sm-8">
                      
                        @Html.EditorFor(m => m.ClaimStatusHR)
                    </div>
                </div>
            </div>

            <div class="col-sm-6">
                <div class="form-group">
                    @Html.Label("Validated by HR/Submitted to AXA/Paid/Rejected")
                    
                </div>
            </div>


               


           

        }


</fieldset>
    if (Model.UserPermission == "HR")
    {
        <div class="form-actions">
            <div class="row">
                <div class="col-sm-12">
                    <button id="submit-by-byhr-button" class="btn btn-primary" type="button">
                        <i class="fa fa-save"></i>
                        Validated by HR
                    </button>
                    <button id="save-button-byhr" class="btn btn-primary" type="button">
                        <i class="fa fa-save"></i>
                        Save As Draft
                    </button>
                </div>
            </div>
        </div>
    }
    if (Model.UserPermission == "Professional")
    {
        <div class="form-actions">
            <div class="row">
                <div class="col-sm-12">
                    <button id="submit-to-hr-button" class="btn btn-primary" type="button">
                        <i class="fa fa-save"></i>
                        Validate to HR
                    </button>
                    <button id="save-button" class="btn btn-primary" type="button">
                        <i class="fa fa-save"></i>
                        Save As Draft
                    </button>
                </div>
            </div>
        </div>
    }
}
@section scripts{
    <script type="text/javascript">

        function filterEventProfessionalID() {
            return {
                id: $("#ProfessionalName_Value").val()
            };
        }

        $(document)
            .ready(function() {
                var strtype = $("#Type_Value").data("kendoDropDownList").text();
                var dependent = $("#DependantName_Value").data("kendoDropDownList");
                var professional = $("#ProfessionalName_Value").data("kendoDropDownList");
                if (strtype === "Dependent") {
                    dependent.enable(true);
                } else {
                    dependent.enable(false);
                }

                var strPermission = $("#UserPermission").val();
                var strClaim = $("#ClaimStatus").val();
                if (strPermission !== "HR") {
                    professional.enable(false);
                    if (strClaim !== "Draft" && strClaim === "Need HR to Validate") {
                        $("#save-button").prop("disabled", true);
                      
                    } else if (strClaim !== "Draft" && strClaim !== "Need HR to Validate") {
                        $("#save-button").prop("disabled", true);
                        $("#submit-to-hr-button").prop("disabled", true);
                    }
                }
                if (strPermission === "HR") {
                    if (strClaim != "Draft") {
                        $("#save-button-byhr").hide();
                    }
                }

                $("#save-button")
                    .click(function() {
                        var strtype = $("#Type_Value").data("kendoDropDownList").text();
                        var strDependent = $("#DependantName_Value").data("kendoDropDownList").text();


                        if (strtype === "Dependent" && strDependent === '') {
                            alert('Dependent Name field is required');
                            return false;
                        } else {
                            $("#ClaimStatus").val("Draft");
                            $('form').prop('action', '/HRInsuranceClaim/UpdateInsuranceClaim');
                            $("form").submit();
                        }

                    });


                $("#submit-to-hr-button")
                    .click(function() {
                        var strtype = $("#Type_Value").data("kendoDropDownList").text();
                        var strDependent = $("#DependantName_Value").data("kendoDropDownList").text();


                        if (strtype === "Dependent" && strDependent === '') {
                            alert('Dependent Name field is required');
                            return false;
                        } else {
                            $("#ClaimStatus").val("Need HR to Validate");
                            $('form').prop('action', '/HRInsuranceClaim/UpdateInsuranceClaim');
                            $("form").submit();
                        }

                    });


                $("#save-button-byhr")
                    .click(function() {
                        var strtype = $("#Type_Value").data("kendoDropDownList").text();
                        var strDependent = $("#DependantName_Value").data("kendoDropDownList").text();


                        if (strtype === "Dependent" && strDependent === '') {
                            alert('Dependent Name field is required');
                            return false;
                        } else {
                            $("#ClaimStatus").val("Draft");
                            $('form').prop('action', '/HRInsuranceClaim/UpdateInsuranceClaim');
                            $("form").submit();
                        }

                    });

                $("#submit-by-byhr-button")
                    .click(function() {
                        var strtype = $("#Type_Value").data("kendoDropDownList").text();
                        var strDependent = $("#DependantName_Value").data("kendoDropDownList").text();
                        var strClaim = $("#ClaimStatusHR_Value").data("kendoDropDownList").text();

                        if (strtype === "Dependent" && strDependent === '') {
                            alert('Dependent Name field is required');
                            return false;
                        } else if (strClaim === "") {
                            alert('Claim Status field is required');
                            return false;
                        } else {
                            $('form').prop('action', '/HRInsuranceClaim/UpdateInsuranceClaim');
                            $("form").submit();
                        }

                    });

            });

        function OnSelectDependantName(e) {
            var dataItem = this.dataItem(e.item);
            if (dataItem.ID === 0) return;
            var url = "/HRDataMaster/GetDependant/" + dataItem.ID;
            $('#IndividualInsuranceNumber').prop('value', '');
            // $('#OrganizationInsuranceID').prop('value', '');
            $.getJSON(url,
                function(result) {
                    $('#IndividualInsuranceNumber').prop('value', result[0].InsuranceNumber);
                    // $('#OrganizationInsuranceID').prop('value', result[0].OrganizationInsurance);

                });
        }

        function OnSelectType(e) {

            var dataItem = this.dataItem(e.item.index());
            var dependent = $("#DependantName_Value").data("kendoDropDownList");
            $('#IndividualInsuranceNumber').prop('value', '');
            // $('#OrganizationInsuranceID').prop('value', '');
            if (dataItem === 'Professional') {
                dependent.enable(false);
            } else {
                dependent.enable(true);
            }
            dependent.select(0);
        }

        function OnSelectProfessionalName(e) {
            var dataItem = this.dataItem(e.item);
            var url = "/HRDataMaster/GetProfessional/" + dataItem.ID;

            $.getJSON(url,
                function(result) {
                    $('#OrganizationInsuranceID').prop('value', result[0].InsuranceAccountNumber);
                    $('#Position').prop('value', result[0].Position);
                    $('#ProfessionalTextName').prop('value', result[0].Name);
                    $('#ProfessionalID').prop('value', result[0].ID);
                });
        }

        function OnSelectClaim(e) {
            var dataItem = this.dataItem(e.item.index());
            if (dataItem !== '') {
                $("#ClaimStatus").val(dataItem);
            }
        }


    </script>
}