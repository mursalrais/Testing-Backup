@using MCAWebAndAPI.Model.ViewModel.Form.HR
@model IEnumerable<MedicalClaimDetailVM>

<div class="col-sm-12">
    @(Html.Kendo().Grid(Model)
          .Name("MedicalClaimDetails")
          .ToolBar(tools => tools.Create().Text("Add New Medical Check Up Claim"))
          .Editable(editable => editable.Mode(GridEditMode.InCell)
              .CreateAt(GridInsertRowPosition.Bottom))
          .Columns(columns =>
          {
              columns.Bound(p => p.Type).ClientTemplate("#= Type.Text #" +
                           "<input type='hidden' name='MedicalClaimDetails[#= getMedicalDetail(data)#].Type.Text' value='#= Type.Text #' />"
                 )
                 .EditorViewData(new
                 {
                     BindTo = MedicalClaimDetailVM.GetTypeOptions(),
                 }
                 ).Width(150)
                  .ClientFooterTemplate("Total :");
              columns.Bound(p => p.Currency).ClientTemplate("#= Currency.Text #" +
                           "<input type='hidden' name='MedicalClaimDetails[#= getMedicalDetail(data)#].Currency.Text' value='#= Currency.Text #' />"
                 )
                 .EditorViewData(new
                 {
                     BindTo = MedicalClaimDetailVM.GetCurrencyOptions(),
                 }
                 ).Width(100);

              columns.Bound(p => p.Amount).ClientTemplate("#= Amount #" +
                             "<input type='hidden' name='MedicalClaimDetails[#= getMedicalDetail(data)#].Amount' value='#= Amount #' />"
              ).Width(150)
               .ClientFooterTemplate("#=sum#");
              columns.Bound(p => p.ReceiptDate).ClientTemplate("#= kendo.toString(ReceiptDate, 'MM-dd-yyyy') #" +
                            "<input type='hidden' name='MedicalClaimDetails[#= getMedicalDetail(data)#].ReceiptDate' value='#= ReceiptDate #' />"
              ).Width(150);
              columns.Bound(p => p.WBS).ClientTemplate("#= WBS #" +
                           "<input type='hidden' name='MedicalClaimDetails[#= getMedicalDetail(data)#].WBS' value='#= WBS #' />"
              ).Width(150);
              columns.Bound(p => p.GLCode).ClientTemplate("#= GLCode #" +
                           "<input type='hidden' name='MedicalClaimDetails[#= getMedicalDetail(data)#].GLCode' value='#= GLCode #' />"
              ).Width(150);
              columns.Bound(p => p.Remarks).ClientTemplate("#= Remarks #" +
                           "<input type='hidden' name='MedicalClaimDetails[#= getMedicalDetail(data)#].Remarks' value='#= Remarks #' />"
              );
              columns.Bound(p => p.ID).Hidden().ClientTemplate("#= ID #" +
                "<input type='hidden' name='MedicalClaimDetails[#= getMedicalDetail(data)#].ID' value='#= ID #' />"
              );
              columns.Bound(p => p.EditMode).Hidden().ClientTemplate("#= EditMode #" +
                           "<input type='hidden' name='MedicalClaimDetails[#= getMedicalDetail(data)#].EditMode' value='#= EditMode #' />"
              );
              columns.Command(command => command.Custom("Delete").HtmlAttributes(new { @class = "btn btn-danger" })
                  .Click("onDeleteKendoDetail")).Width(100);

          })
          .Events(e =>
          {
              e.Edit("onEditKendoDetail");
              e.DataBound("onDataBoundMedicalDetails");
          })
          .DataSource(dataSource => dataSource.Ajax()
          .Aggregates(aggregates =>
          {
              aggregates.Add(p => p.Amount).Sum();
          })

              .Model(model =>
              {
                  model.Id(p => p.ID);
                  model.Field(m => m.ReceiptDate).DefaultValue(DateTime.UtcNow);
                  model.Field(m => m.Currency).DefaultValue(MedicalClaimDetailVM.GetCurrencyDefaultValue());
                  model.Field(m => m.Type).DefaultValue(MedicalClaimDetailVM.GetTypeDefaultValue());
              })
              .ServerOperation(false)
          )
    )
</div>
<script>
    function getMedicalDetail(dataItem) {
        var data = $("#MedicalClaimDetails").data("kendoGrid").dataSource.data();
        return data.indexOf(dataItem);
    }

    function onDataBoundMedicalDetails(e) {
        var grid = $("#MedicalClaimDetails").data("kendoGrid");
        hideDeletedRowKendoDetail(grid);
    }

</script>