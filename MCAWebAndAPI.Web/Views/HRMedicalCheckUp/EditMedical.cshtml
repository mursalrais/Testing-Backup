@using MCAWebAndAPI.Model.ViewModel.Form.HR
@model MedicalCheckUpVM


@using (Html.BeginForm("", "HRMedicalCheckUp", FormMethod.Post,
                            new
                            {
                                @class = "form-horizontal",
                                enctype = "multipart/form-data"
                            }))



{
    <fieldset>

        @Html.AntiForgeryToken()
        @Html.ValidationSummary()
        @Html.HiddenFor(m => m.ProfessionalTextName)
        @Html.HiddenFor(m => m.ProfessionalID)
        @Html.HiddenFor(m => m.UserPermission)
        @Html.HiddenFor(m => m.ClaimStatus)
        @Html.HiddenFor(m => m.VisibleTo)
        @Html.HiddenFor(m => m.OfficeEmail)
        @Html.HiddenFor(m => m.ID)
        <div class="col-sm-6">
            <div class="form-group">
                @Html.Bootstrap().LabelFor(m => m.ClaimDate).Class("col-sm-4 control-label")
                <div class="col-sm-8">
                    @Html.EditorFor(m => m.ClaimDate)
                </div>
            </div>
            <div class="form-group">
                @Html.Bootstrap().LabelFor(m => m.ProfessionalName).Class("col-sm-4 control-label")
                <div class="col-sm-8">
                    @Html.EditorFor(m => m.ProfessionalName)
                </div>
            </div>
            <div class="form-group">
                @Html.Bootstrap().LabelFor(m => m.Unit).Class("col-sm-4 control-label")
                <div class="col-sm-8">
                    @Html.DisplayFor(m => m.Unit)
                </div>
            </div>
            <div class="form-group">
                @Html.Bootstrap().LabelFor(m => m.Position).Class("col-sm-4 control-label")
                <div class="col-sm-8">
                    @Html.DisplayFor(m => m.Position)
                </div>
            </div>
            <div class="form-group">
                @Html.Bootstrap().LabelFor(m => m.Description).Class("col-sm-4 control-label")
                <div class="col-sm-8">
                    @Html.DisplayFor(m => m.Description)
                </div>
            </div>
            <div class="form-group">
                @Html.Bootstrap().LabelFor(m => m.UnitQty).Class("col-sm-4 control-label")
                <div class="col-sm-8">
                    @Html.DisplayFor(m => m.UnitQty)
                </div>
            </div>
        </div>

        <div class="col-sm-6">

            <div class="form-group">
                @Html.Bootstrap().LabelFor(m => m.WBS).Class("col-sm-4 control-label")
                <div class="col-sm-8">
                    @Html.DisplayFor(m => m.WBS)
                </div>
            </div>
            <div class="form-group">
                @Html.Bootstrap().LabelFor(m => m.GL).Class("col-sm-4 control-label")
                <div class="col-sm-8">
                    @Html.DisplayFor(m => m.GL)
                </div>
            </div>

            <div class="form-group">
                @Html.Bootstrap().LabelFor(m => m.Amount).Class("col-sm-4 control-label")
                <div class="col-sm-8">
                    @Html.EditorFor(m => m.Amount)
                </div>
            </div>


            <div class="form-group">
                @Html.Bootstrap().LabelFor(m => m.Remarks).Class("col-sm-4 control-label")
                <div class="col-sm-8">
                    @Html.EditorFor(m => m.Remarks)
                </div>
            </div>

        </div>




    </fieldset>
}
   
    <div class="form-actions">
        <div class="row">
            <div class="col-sm-12">
                <button id="submit-button" class="btn btn-primary" type="submit">
                    <i class="fa fa-save"></i>
                    Submit
                </button>
                <button id="save-button" class="btn btn-primary" type="submit">
                    <i class="fa fa-save"></i>
                    Save
                </button>
                <button id="print-button" class="btn btn-primary" >
                    
                    Print
                </button>
            </div>
        </div>
    </div>

@section scripts{
    <script type="text/javascript">
     

        function save(status) {
            var defaultyear = kendo.toString($("#ClaimDate").data("kendoDatePicker").value(), 'yyyy');

            var strUserId = $("#ProfessionalID").val();
            var strUserPermission = $("#UserPermission").val();
            var url = "/HRMedicalCheckUp/GetMedicalYear/" + strUserId;

            $.getJSON(url,
                function (result) {
                    if (result.length === 0) {
                        $("#ClaimStatus").val(status);
                        $('form').prop('action', '/HRMedicalCheckUp/SubmitMedical');
                        $("form").submit();
                    } else {
                        for (var i = 0; i <= result.length - 1; i++) {
                            if (defaultyear === result[i].Year && result[i].ClaimStatus === 'Submitted' && strUserPermission!=='HR') {
                                alert('Sorry, Your Medical Check-Up for this period has been claimed. ' +
                                    'Please process next claim in the next period. If there is any inconvenience process for this, ' +
                                    'please contact HR Officer directly. Thank you');
                                return;
                            }
                        }
                        $("#ClaimStatus").val(status);
                        $('form').prop('action', '/HRMedicalCheckUp/UpdateMedical');
                        $("form").submit();
                    }
                });

        }

        $(document)
            .ready(function () {
                var strClaim = $("#ClaimStatus").val();
                var professional = $("#ProfessionalName_Value").data("kendoDropDownList");
                var strPermission = $("#UserPermission").val();
                if (strPermission !== "HR") {
                    professional.enable(false);
                }


                if (strClaim !== "Draft" && strPermission === "HR") {
                    $("#save-button").hide();
                }
                else if (strClaim !== "Draft" && strPermission === "Professional") {
                    var defaultyear = kendo.toString($("#ClaimDate").data("kendoDatePicker"));
                    defaultyear.enable(false);
                    $("#save-button").hide();
                    $("#submit-button").hide();
                }
                else if (strClaim === "Draft") {
                    $("#print-button").hide();
                }


                $("#save-button")
                    .click(function () {
                        save('Draft');

                    });

                $("#submit-button")
                    .click(function () {

                        save('Submitted');

                    });


            });

       


        function OnSelectProfessionalName(e) {
            var dataItem = this.dataItem(e.item);
            var url = "/HRDataMaster/GetProfessional/" + dataItem.ID;

            $.getJSON(url,
                function (result) {

                    $('#OfficeEmail').prop('value', result[0].OfficeEmail);
                    $('#Unit').prop('value', result[0].Project_Unit);
                    $('#Position').prop('value', result[0].Position);
                    $('#ProfessionalTextName').prop('value', result[0].Name);
                    $('#ProfessionalID').prop('value', result[0].ID);
                });
        }




    </script>
}