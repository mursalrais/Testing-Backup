@using MCAWebAndAPI.Model.ViewModel.Form.Finance
@model PettyCashPaymentVoucherVM

@{
    ViewBag.Title = "Edit Petty Cash Payment Voucher";

}

@using (Html.BeginForm("Edit", "FINPettyCashPaymentVoucher", FormMethod.Post,
                                    new
                                    {
                                        @class = "form-horizontal",
                                        enctype = "multipart/form-data"
                                    }))
{

    <fieldset>
        <legend>Petty Cash Payment Voucher @Model.TransactionNo </legend>
        <div class="row">
            @Html.Partial("_General", Model)
        </div>


    </fieldset>


    <div class="form-actions">
        <div class="row">
            <div class="col-sm-12">
                <button id="print-button" class="btn btn-default" type="button">
                    Print
                </button>

                <button id="submit-button" class="btn btn-primary" type="submit" value="Save" name="actionType">
                    <i class="fa fa-save"></i>
                    Submit
                </button>

                <a href="@ViewBag.CancelUrl" target='_parent'>
                    <input class="k-button k-button-icontext k-grid-add" size="4" value="Cancel" />
                </a>
            </div>
        </div>
    </div>

}

@section scripts{
    <script>
        var GREY_COLOR = "#E5E4E2";

        $('#print-button').click(function (e) {
            if (!$('form').valid()) {
                alert('Please make sure that all required fields are filled');
                return;
            }

            var actionUrl = $('form').attr("action");
            var newActionUrl = actionUrl.replace("Edit", "Print");

            $('form').prop('action', newActionUrl);
            $('form').submit();

        });


        $(document).ready(function () {
            SetBaseOnPaidTo($("#PaidTo_Value").data("kendoDropDownList").value(), false);
           
            $('#AmountPaidInWord').css({ "background-color": GREY_COLOR });
            $('#AmountPaidInWord').attr("readonly", "readonly");

            $('#Fund').css({ "background-color": GREY_COLOR });

            $('#Amount').change(function () {
                GetAmountWords();
            });



        });

        function GetAmountWords()
        {
            var url = '@Url.Action("GetAmountInWords", "FINPettyCashPaymentVoucher")';
            var amount = $('#Amount').val(); // The option selected
            var selectedcurrency = $('#hdnCurrency').val();

            if (amount !== '') {
                $.ajax({
                    url: url,
                    type: "GET",
                    data: { data: amount, currency: selectedcurrency },
                    success: function (response) {
                        $('#AmountPaidInWord').val(response);
                    },
                    error: function (response) {
                        $('#AmountPaidInWord').val('Error');
                    }
                });
            }
        }

        var PAIDTO_PROFESSIONAL = "Professional";
        var PAIDTO_VENDOR = "Vendor";

        function onSelectPaidTo(e) {
            var data = this.dataItem(e.item);

            SetBaseOnPaidTo(data, true);


        }

        function SetBaseOnPaidTo(data, resetSelection) {
            var professionalDropDownList = $("#Professional_Value").data("kendoDropDownList");
            var vendorDropDownList = $("#Vendor_Value").data("kendoDropDownList");

            switch (data) {
                case PAIDTO_PROFESSIONAL:
                    professionalDropDownList.enable(true);
                    if (resetSelection)
                    {
                        professionalDropDownList.select(0);
                    }
                    
                    vendorDropDownList.options.optionLabel = "";
                    vendorDropDownList.refresh();
                    vendorDropDownList.select(0);
                    vendorDropDownList.enable(false);
                    vendorDropDownList.text("");
                    break;

                case PAIDTO_VENDOR:
                    professionalDropDownList.options.optionLabel = "";
                    professionalDropDownList.refresh();
                    professionalDropDownList.select(0);
                    professionalDropDownList.text("");
                    professionalDropDownList.enable(false);

                    vendorDropDownList.enable(true);
                    if (resetSelection) {
                        vendorDropDownList.select(0);
                    }
                    break;

                default:
                    professionalDropDownList.enable(false);
                    vendorDropDownList.enable(false);
                    break;
            }

            $('.k-state-disabled').css({ "background-color": GREY_COLOR });
            $('.k-state-default').css({ "background-color": "white" });
        }

        function onSelectCurrency(e)
        {
            var data = this.dataItem(e.item);
            $('#hdnCurrency').val(data);
            GetAmountWords();
        }
    </script>
}


<style media="screen">
    .k-button-icontext {
        height: 35px;
        margin-left: 5px;
    }
</style>




