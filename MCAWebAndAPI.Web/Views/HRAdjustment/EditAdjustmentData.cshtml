@using MCAWebAndAPI.Model.ViewModel.Form.HR
@using MCAWebAndAPI.Web.Helpers
@model AdjustmentDataVM
@{
    ViewBag.Title = "Edit Adjustment HR";
}

@using (Ajax.BeginForm("CreateAdjustmentData", "HRAdjustment", FormMethod.Post, new AjaxOptions
{
    OnBegin = "onBeginForm",
    OnComplete = "onCompleteForm",
    OnSuccess = "onSuccessFormEmbed",
    OnFailure = "onFailureForm"
}, new
{
    @class = "form-horizontal"
}))
{
    <fieldset>
        <input type="hidden" id="loadpage" value="0">
        <div class="row">
            <div class="form-group" id="ParentDiv">
                @Html.Bootstrap().LabelFor(m => m.periodDate).Class("col-xs-2 control-label")
                <div class="col-xs-4">
                    @Html.EditorFor(m => m.periodDate)
                </div>
            </div>
        </div>

        <legend>Adjustment list</legend>
        <div id="adjustmentlist" class="row"></div>

        <button id="submit-button" class="btn btn-primary">
            <i class="fa fa-save"></i>
            Save
        </button>
        <button id="cancel-button" class="btn btn-danger">
            <i class="fa fa-save"></i>
            cancel
        </button>
    </fieldset>
}
@section scripts{
    <script>
        $(document).ready(function () {

            var url = "/HRAdjustment/GetAdjustmentDetails?period=" + $("#periodDate").val();

            $('#adjustmentlist').load(url, function (response, status, xhr) {
                if (status == "success") {
                }
            });

            $("#periodDate").kendoDatePicker({
                change: onChange
            });

            $(".submit-button").click(function (e) {
                $('form').submit();
            });
        });


        function onChange() {
            var url = "/HRAdjustment/GetAdjustmentDetails?period=" + $("#periodDate").val();

            $('#adjustmentlist').load(url, function (response, status, xhr) {
                if (status == "success") {
                }
            });
        }

        function getProfId(prof) {
            if (prof != null) {
                return prof.Value;
            };
        }

        function getProjUnit(prof) {
            if (prof != null) {
                return prof.Project_Unit;
            };
        }

        function getPosition(prof) {
            if (prof != null) {
                return prof.Position;
            };
        }

        function GetDetailAdjustment(dataItem) {
            var data = $("#AdjustmentDetails").data("kendoGrid").dataSource.data();
            return data.indexOf(dataItem);
        }

        function onDataBoundAdjustmentDetails(e) {
            var grid = $("#AdjustmentDetails").data("kendoGrid");
            hideDeletedRowKendoDetail(grid);
        }

    </script>
}


