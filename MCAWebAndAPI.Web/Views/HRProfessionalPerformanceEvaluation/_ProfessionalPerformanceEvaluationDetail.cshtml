@using MCAWebAndAPI.Model.ViewModel.Form.HR
@model ProfessionalPerformanceEvaluationVM

    <div class="col-sm-12">

        @(Html.Kendo().Grid(Model.ProfessionalPerformanceEvaluationDetails)
        .Name("ProfessionalPerformanceEvaluationDetails")
        .ToolBar(tools => tools.Create().Text("Add New"))
        .Editable(editable => editable.Mode(GridEditMode.InCell)
        .CreateAt(GridInsertRowPosition.Bottom))
        .Columns(columns =>
        {
            columns.Bound(p => p.Category).ClientTemplate("#= Category.Text #" +
            "<input type='hidden' name='ProfessionalPerformanceEvaluationDetails[#= getProfessionalPerformancePlanDetail(data)#].Category.Text' value='#= Category.Text #' />"
            )
            .EditorViewData(new
            {
                BindTo = ProjectOrUnitGoalsDetailVM.GetCategoryOptions()
            });
            columns.Bound(p => p.IndividualGoalAndPlan).ClientTemplate("#= IndividualGoalAndPlan #" +
            "<input type='hidden' name='ProfessionalPerformanceEvaluationDetails[#= getProfessionalPerformancePlanDetail(data)#].IndividualGoalAndPlan' value='#= IndividualGoalAndPlan #' />"
            );
            columns.Bound(p => p.PlannedWeight).ClientTemplate("#= PlannedWeight #%" +
            "<input type='hidden' name='ProfessionalPerformanceEvaluationDetails[#= getProfessionalPerformancePlanDetail(data)#].PlannedWeight' value='#= PlannedWeight #' />"
            );
            columns.Bound(p => p.ActualWeight).ClientTemplate("#= ActualWeight #%" +
            "<input type='hidden' name='ProfessionalPerformanceEvaluationDetails[#= getProfessionalPerformancePlanDetail(data)#].ActualWeight' value='#= ActualWeight #' />"
            );
            columns.Bound(p => p.Score).ClientTemplate("#= Score #" +
            "<input type='hidden' name='ProfessionalPerformanceEvaluationDetails[#= getProfessionalPerformancePlanDetail(data)#].Score' value='#= Score #' />"
            );
            columns.Bound(p => p.TotalScore).ClientTemplate("#= TotalScore #" +
            "<input type='hidden' name='ProfessionalPerformanceEvaluationDetails[#= getProfessionalPerformancePlanDetail(data)#].TotalScore' value='#= TotalScore #' />"
            );
            columns.Bound(p => p.Output).ClientTemplate("#= Output #" +
            "<input type='hidden' name='ProfessionalPerformanceEvaluationDetails[#= getProfessionalPerformancePlanDetail(data)#].Output' value='#= Output #' />"
            );
            columns.Bound(p => p.ID).Hidden().ClientTemplate("#= ID #" +
            "<input type='hidden' name='ProfessionalPerformanceEvaluationDetails[#= getProfessionalPerformancePlanDetail(data)#].ID' value='#= ID #' />"
            );
            columns.Bound(p => p.EditMode).Hidden().ClientTemplate("#= EditMode #" +
            "<input type='hidden' name='ProfessionalPerformanceEvaluationDetails[#= getProfessionalPerformancePlanDetail(data)#].EditMode' value='#= EditMode #' />"
            );
            columns.Command(command => command.Custom("Delete").HtmlAttributes(new { @class = "btn btn-danger" })
            .Click("onDeleteKendoDetail")).Width(100);
            columns.Command(command => command.Custom("Add Same Project").Click("addNewCustomRow")).Width(180);
        })
        .Events(e =>
        {
            e.Edit("onCustomEditKendoDetail");
            e.DataBound("onDataBoundProfessionalPerformanceEvaluationDetails");
        })
        .DataSource(dataSource => dataSource.Ajax()
        .Model(model =>
        {
            model.Id(p => p.ID);
            model.Field(m => m.Category).DefaultValue(ProjectOrUnitGoalsDetailVM.GetCategoryDefaultValue());
        })
        .ServerOperation(false)
        )
        )
    </div>

    <script>

        var isCustomAdd = false;
        var customRowDataItem;

        function addNewCustomRow(e) {
            e.preventDefault();

            customRowDataItem = this.dataItem($(e.currentTarget).closest("tr"));
            isCustomAdd = true;
            this.addRow();
        }

        function onCustomEditKendoDetail(e) {
            if (!e.model.isNew()) {
                var container = e.container;
                var tr = container.closest('tr');
                var data = this.dataItem(tr); //get the row data so it can be referred later
                // 1 is Item.Mode.UPDATED
                data.set("EditMode", 1);
            }
            if (isCustomAdd && e.model.isNew()) {
                isCustomAdd = false;
                $(e.container).find("[name='ProjectOrUnitGoals']").val(customRowDataItem.ProjectOrUnitGoals).change();
            }
        }

        function getProfessionalPerformancePlanDetail(dataItem) {
            dataItem.set('TotalScore', (dataItem.ActualWeight / 100) * dataItem.Score);
            var data = $("#ProfessionalPerformanceEvaluationDetails").data("kendoGrid").dataSource.data();
            return data.indexOf(dataItem);
        }

        function onDataBoundProfessionalPerformanceEvaluationDetails(e) {
            var grid = $("#ProfessionalPerformanceEvaluationDetails").data("kendoGrid");
            hideDeletedRowKendoDetail(grid);
        }
    </script>
