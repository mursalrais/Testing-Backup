
@using MCAWebAndAPI.Model.ViewModel.Form.HR
@using MCAWebAndAPI.Web.Helpers

@model CompensatoryVM

@{
    ViewBag.Title = "Edit Compensatory HR";
}

@using (Ajax.BeginForm("CreateCompensatoryData", "HRCompensatory", FormMethod.Post,
                        new AjaxOptions
                        {
                            OnBegin = "onBeginForm",
                            OnComplete = "onCompleteForm",
                            OnSuccess = "onSuccessFormEmbed",
                            OnFailure = "onFailureForm"
                        }, new { @class = "form-horizontal" }))

{
    <fieldset>
        @Html.HiddenFor(m => m.cmpID)
        @Html.HiddenFor(m => m.cmpName)
        @Html.HiddenFor(m => m.cmpEmail)
        @Html.HiddenFor(m => m.cmpTitle)
        @Html.HiddenFor(m => m.cmpPosition)
        @Html.HiddenFor(m => m.cmpYearDate)
        @Html.HiddenFor(m => m.Requestor)
        @Html.HiddenFor(m => m.profId)

        <input type="hidden" id="loadpage" value="0">

        <div class="row">
            <div class="form-group">
                @Html.Bootstrap().LabelFor(m => m.ddlProfessional).Class("col-xs-2 control-label")
                <div class="col-xs-4">
                    @Html.EditorFor(m => m.ddlProfessional)
                </div>
            </div>
        </div>
        <div class="row">
            <div class="form-group">
                @Html.Bootstrap().LabelFor(m => m.cmpProjUnit).Class("col-xs-2 control-label")
                <div class="col-xs-3">
                    @Html.EditorFor(m => m.cmpProjUnit)
                </div>
            </div>
        </div>
        <div class="row">
            <div class="form-group">
                @Html.Bootstrap().LabelFor(m => m.ddlCompensatoryID).Class("col-xs-2 control-label")
                <div class="col-xs-3">
                    @Html.EditorFor(m => m.ddlCompensatoryID)
                </div>
            </div>
        </div>
        <div class="col-sm-12">
            <div class="form-group" id="ParentDiv">
                <div class="col-sm-8">
                    @Html.DisplayFor(m => m.StatusForm)
                </div>
            </div>
        </div>
        <legend>Compensatory list</legend>
        <div id="compensatorylist" class="row"></div>


    </fieldset>
}


@if (Model.StatusForm != "Approved")
{
    if (Model.StatusForm != "Reject")
    {
<div class="row pull-right">
    <div class="col-sm-12">
        <button id="submithr-button" class="btn btn-primary" type="button">
            <i class="fa fa-save"></i>
            Submit
        </button>
    </div>
</div>
    }
}

@if (Model.StatusForm == "" || Model.StatusForm == "Draft")
{
    <div class="row pull-right">
        <div class="col-sm-12">
            <button id="submit-draft-button" class="btn btn-primary" type="button">
                <i class="fa fa-clipboard"></i>
                Save As Draft
            </button>
        </div>
    </div>
}

@section scripts{

    <script>
                     var eMail = null;
                     var cektime = true;

                    $(document).ready(function () {
                        showLoading();
                        var nameProf = $("#cmpName").val() + " - " + $("#cmpPosition").val()
                        $("#ProfName").prop("value", nameProf);
                        $("#ProfName").prop('readonly', 'true');

                        var url = "/HRCompensatory/GetCompensatoryDetails?idComp=" + $("#cmpID").val();

                        $('#compensatorylist').load(url, function (response, status, xhr) {
                            if (status == "success") {
                                hideLoading();
                            }
                        });

                        var CompStatus = $("#StatusForm").val();

                        if (CompStatus == 'Approved') {
                            $('#submithr-button').addClass('hide');
                            $('#print-button').removeClass('hide');
                            $('#approve-button').addClass('hide');
                            $('#reject-button').addClass('hide');
                            $('#cancel-button').addClass('hide');
                            $('#submit-draft-button').addClass('hide');
                            $('#unapprove-button').removeClass('hide');
                            $('#submit-draft-initiate-button').addClass('hide');
                        }

                        if (CompStatus == 'Pending Approval 1 of 2' || CompStatus == 'Pending Approval 2 of 2' || CompStatus == 'Draft') {
                            $('#print-button').addClass('hide');
                            $('#unapprove-button').addClass('hide');
                            $('#approve-button').removeClass('hide')
                            $('#reject-button').removeClass('hide')
                            $('#submithr-button').removeClass('hide');
                            $('#cancel-button').removeClass('hide');
                            $('#submit-draft-button').removeClass('hide');
                            $('#submit-draft-initiate-button').removeClass('hide');
                        }

                        $("#cancel-button").click(function () {

                            showLoading();
                            var url = "/HRCompensatory/GetCompensatoryDetails?idComp=" + $("#cmpID").val();

                            $('#compensatorylist').load(url, function (response, status, xhr) {
                                if (status == "success") {
                                    hideLoading();
                                }
                            });
                        });

                        $("#submithr-button").click(function () {
                            $("#StatusForm").val("submithr");
                            var rowgrid = $("#CompensatoryDetails").data("kendoGrid").tbody.find("tr");
                            var valdate = true;
                            var i = -1;
                            var j = -1;
                            rowgrid.each(function (e) {
                                i++;
                                var xdate = $("#Dateid" + i).val();
                                var xEdit = $("#Editid" + i).val();
                                rowgrid.each(function (e) {
                                    j++;
                                    var ydate = $("#Dateid" + j).val();
                                    var yEdit = $("#Editid" + j).val();
                                    if (i !== j) {
                                        if (xdate != "undifined" && ydate != "undifined") {
                                            if (xEdit != -1) {
                                                if (yEdit != -1) {
                                                    if (xdate == ydate) {
                                                        valdate = false;
                                                    }
                                                }
                                            }
                                        }
                                    }
                                });
                            });

                            var x = -1;
                            rowgrid.each(function (e) {
                                x++;
                                debugger;
                                var xstart = $("#Start" + x).val();
                                var xfinish = $("#Finish" + x).val();
                                if (xfinish <= xstart) {
                                    cektime = false;
                                }
                            });

                            if (valdate == false) {
                                alert("Date you have chosen already exists, please choose another date..!!");
                            } else if (cektime == false) {
                                alert("Time (Finish) cannot be same or earlier than Time (Start)");
                            } else {
                                $("form").submit();
                            }
                        });

                        $("#approve-button").click(function () {
                            var rowgrid = $("#CompensatoryDetails").data("kendoGrid").tbody.find("tr");
                            var valdate = true;
                            var i = -1;
                            rowgrid.each(function (e) {
                                i++;
                                var xdate = $("#Dateid" + i).val();
                                var xEdit = $("#Editid" + i).val();
                                var j = -1;

                                rowgrid.each(function (e) {
                                    j++;
                                    var ydate = $("#Dateid" + j).val();
                                    var yEdit = $("#Editid" + j).val();
                                    if (i !== j) {
                                        if (xdate != "undifined" && ydate != "undifined") {
                                            if (xEdit != -1) {
                                                if (yEdit != -1) {
                                                    if (xdate == ydate) {
                                                        valdate = false;
                                                        return false;

                                                    }
                                                }
                                            }
                                        }
                                    }
                                });
                            });

                            var x = -1;
                            rowgrid.each(function (e) {
                                x++;
                                debugger;
                                var xstart = $("#Start" + x).val();
                                var xfinish = $("#Finish" + x).val();
                                if (xfinish <= xstart) {
                                    cektime = false;
                                }
                            });

                            if (valdate == false) {
                                alert("Date you have chosen already exists, please choose another date..!!");
                            } else if (cektime == false) {
                                alert("Time (Finish) cannot be same or earlier than Time (Start)");
                            } else {
                                $("form").submit();
                            }
                        });

                        $('#reject-button').click(function (e) {
                            $("#StatusForm").val("Reject")
                            $("form").submit();
                        });

                        $("#submit-draft-button").click(function () {
                            var rowgrid = $("#CompensatoryDetails").data("kendoGrid").tbody.find("tr");
                            var valdate = true;
                            var i = -1;
                            var j = -1;
                            rowgrid.each(function (e) {
                                i++;
                                var xdate = $("#Dateid" + i).val();
                                rowgrid.each(function (e) {
                                    j++;
                                    var ydate = $("#Dateid" + j).val();
                                    if (i !== j) {
                                        if (xdate != "undifined" && ydate != "undifined") {
                                            if (xdate == ydate) {
                                                valdate = false;
                                            }
                                        }
                                    }
                                });
                            });

                            var x = -1;
                            rowgrid.each(function (e) {
                                x++;
                                debugger;
                                var xstart = $("#Start" + x).val();
                                var xfinish = $("#Finish" + x).val();
                                if (xfinish <= xstart) {
                                    cektime = false;
                                }
                            });

                            if (valdate == false) {
                                alert("Date you have chosen already exists, please choose another date..!!");
                            } else if (cektime == false) {
                                alert("Time (Finish) cannot be same or earlier than Time (Start)");
                            } else {
                                $("#StatusForm").val("Draft")
                                $("form").submit();
                            }
                        });

                        $('#print-button').click(function (e) {
                            $("#ParentDiv").show();
                            var url = "/HRCompensatory/PrintCompensatoryRequest";
                            submitFormToPrint(url);
                        });

                        $("#submit-button").click(function () {
                            $("form").submit();
                        });

                    });

                    function filterLevel() {
                        return {
                            idProf: $('#ddlProfessional_Value').data("kendoDropDownList").dataItem($('#ddlProfessional_Value').data("kendoDropDownList").select()).ID
                        };
                    }

                    function OnChangeCompensatory(e) {
                        var dataItem = this.dataItem(e.item);
                        var idComp = null;
                        var CompStatus = null;

                        if (dataItem != null) {
                            idComp = dataItem.CompensatoryID;
                            CompStatus = dataItem.CompensatoryStatus;
                        }
                            $("#StatusForm").prop("value", CompStatus);

                            if (CompStatus == 'Approved') {
                                $('#submithr-button').addClass('hide');
                                $('#print-button').removeClass('hide');
                                $('#approve-button').addClass('hide');
                                $('#reject-button').addClass('hide');
                                $('#cancel-button').addClass('hide');
                                $('#unapprove-button').removeClass('hide');
                                $('#submit-draft-initiate-button').addClass('hide');
                            }

                            if (CompStatus == 'Pending Approval 1 of 2' || CompStatus == 'Pending Approval 2 of 2' || CompStatus == 'Draft')
                            {
                                $('#print-button').addClass('hide');
                                $('#unapprove-button').addClass('hide');
                                $('#approve-button').removeClass('hide')
                                $('#reject-button').removeClass('hide')
                                $('#submithr-button').removeClass('hide');
                                $('#cancel-button').removeClass('hide');
                                $('#submit-draft-initiate-button').removeClass('hide');
                            }

                            if (CompStatus == 'Draft') {
                                $('#approve-button').addClass('hide');
                                $('#reject-button').addClass('hide');
                            }

                            var url = "/HRCompensatory/GetCompensatoryDetails?idComp=" + idComp;

                            $('#compensatorylist').load(url, function (response, status, xhr) {
                                if (status == "success") {
                                }
                            });

                            $("#cmpID").prop("value", idComp);

                            hideLoading();
                    };

                    function OnChangeProffesional(e) {
                        var dataItem = this.dataItem(e.item);
                        eMail = dataItem.OfficeEmail;
                        $("#cmpName").prop("value", dataItem.FirstMiddleName);
                        $("#profId").prop("value", dataItem.ID);
                        $("#cmpProjUnit").prop("value", dataItem.Project_Unit);
                    };

                    function getDayName(date) {
                        var day = new Array();
                        day[0] = "Sunday";
                        day[1] = "Monday";
                        day[2] = "Tuesday";
                        day[3] = "Wednesday";
                        day[4] = "Thursday";
                        day[5] = "Friday";
                        day[6] = "Saturday";

                        if (date != null) {
                            return day[date.getDay()];

                        };
                    }

                    function onChangecomp(e) {
                        var container = e.container;
                        valdate = true;

                        if (e.action === "itemchange") {
                            var model = e.items[0];


                            if (model.StartTime != null && model.FinishTime != null) {
                                var start = model.StartTime.getHours();
                                var finish = model.FinishTime.getHours();
                                var startmin = model.StartTime.getMinutes();
                                if (startmin == 30)
                                    startmin = 0.5
                                var finishmin = model.FinishTime.getMinutes();
                                if (finishmin == 30)
                                    finishmin = 0.5

                                var range;

                                if ((finish + finishmin) <= (start + startmin)) {
                                    alert("Time (Finish) cannot be same or earlier than Time (Start)")
                                    cektime = false;
                                } else {
                                    cektime = true;
                                }

                                if (start + startmin < finish + finishmin) {
                                    range = (finish + finishmin) - (start + startmin)

                                    if (model.CmpTotalHours != range) {
                                        model.set("CmpTotalHours", range);
                                    }

                                    if (range > 4) {
                                        totday = 1
                                    } else {
                                        totday = 0.5
                                    }

                                    if (model.TotalDay != totday) {
                                        model.set("TotalDay", totday);
                                    }
                                }
                            }
                        }
                    }

                    function onDataBoundDependentDetails(e) {
                        var grid = $("#CompensatoryDetails").data("kendoGrid");
                        hideDeletedRowKendoDetail(grid);
                    }

                    function GetDetailComplist(dataItem) {
                        var data = $("#CompensatoryDetails").data("kendoGrid").dataSource.data();
                        return data.indexOf(dataItem);
                    }

                    function onSuccess(data) {

                        window.location.href = data.urlToRedirect;
                    }

                    function onFailure(data) {

                        window.location.href = data.urlToRedirect;
                    }

    </script>
}





