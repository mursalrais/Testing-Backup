
@using MCAWebAndAPI.Model.ViewModel.Form.HR
@model CompensatoryVM

@{
    ViewBag.Title = "InputCompensatoryData";
}

@using (Html.BeginForm("CreateCompensatoryData", "HRCompensatory", FormMethod.Post, new
{
    @class = "form-horizontal",
    enctype = "multipart/form-data"
}))
{
        <fieldset>
            @Html.HiddenFor(m => m.cmpID)
            @Html.HiddenFor(m => m.cmpName)
            @Html.HiddenFor(m => m.cmpPosition)
            <input type="hidden" id="loadpage" value="0">
            <div class="row">
                <div class="form-group">
                    @Html.Bootstrap().LabelFor(m => m.ddlProfessional).Class("col-md-2 control-label")
                    <div class="col-md-3">
                        @Html.EditorFor(m => m.ddlProfessional)
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="form-group">
                    @Html.Bootstrap().LabelFor(m => m.cmpProjUnit).Class("col-md-2 control-label")
                    <div class="col-md-3">
                        @Html.EditorFor(m => m.cmpProjUnit)
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="form-group">
                    @Html.Bootstrap().LabelFor(m => m.ddlCompensatoryID).Class("col-md-2 control-label")
                    <div class="col-md-3">
                        @Html.EditorFor(m => m.ddlCompensatoryID)
                    </div>
                </div>
            </div>
            <legend>Compensatory list</legend>
            <div class="row">
                @*@Html.Partial("_InputCompensantoryDetails", Model.CompensatoryDetails)*@
            </div>

            <div id="compensatorylist-placeholder" class="row" />

        </fieldset>
}

        @if (Model.StatusForm != "")
        {
                <div class="row pull-right">
                    <div class="col-sm-12">
                        <button id="submit-button" class="btn btn-primary" type="submit">
                            <i class="fa fa-save"></i>
                            Submit For Approval
                        </button>
                        <button id="submit-draft-initiate-button" class="btn btn-primary" type="submit">
                            <i class="fa fa-save"></i>
                            Save As Draft
                        </button>
                    </div>
                </div>
        }


        @if (Model.StatusForm == "Pending Approval 1 of 2")
        {
            <div class="row">
                <div class="col-sm-12">
                    <button id="submit-button" class="btn btn-success" type="submit">
                        <i class="fa fa-save"></i>
                        Approve
                    </button>
                    <button id="reject1-button" class="btn btn-danger" type="submit">
                        <i class="fa fa-save"></i>
                        Reject
                    </button>
                </div>
            </div>
        }
        @if (Model.StatusForm == "Approved")
        {
                <div class="row pull-right">
                    <div class="col-sm-12">
                        <button id="print-button" class="btn btn-primary" type="button">
                            Print
                        </button>
                    </div>
                </div>
        }


@section scripts{

    <script>

        function filterLevel() {
            return {
                idProf: $('#ddlProfessional_Value').data("kendoDropDownList").dataItem($('#ddlProfessional_Value').data("kendoDropDownList").select()).ID
            };
        }

        function getUrlVars() {
            var vars = {};
            var parts = window.location.href.replace(/[?&]+([^=&]+)=([^&]*)/gi,
            function (m, key, value) {
                vars[key] = value;
            });
            return vars;
        }

        function OnChangeCompensatory(e) {
            var dataItem = this.dataItem(e.item);
            var idComp = dataItem.ID
            var idProf = getUrlVars()["iD"];
            var url = "/HRCompensatory/GetCompensatoryDetails?idComp=" + idComp;

            showLoading();
            $('#compensatorylist-placeholder').load(url, function( response, status, xhr ) {
                if (status == "success") {
                    hideLoading();
            }
        });
        };

        $(document).ready(function () {
            var positionID = $("#CmpName").val() +" - "+ $("#CmpPosition").val();
            $("#NamePos").prop("value", positionID);

            $("#submit-button").click(function () {
                $("form").submit();
            });
        });

        function getDayName(date) {
            var day = new Array();
            day[0] = "Monday";
            day[1] = "Tuesday";
            day[2] = "Wednesday";
            day[3] = "Thursday";
            day[4] = "Friday";
            day[5] = "Saturday";
            day[6] = "Sunday";

            if(date != null)
            {
                return day[date.getDay()];
            };
        }

        function onChange(e) {
            var container = e.container;
            var tr = container.closest('tr');
            var data = this.dataItem(tr);
            var start = data.StartTime.getHours();
            var finish = data.FinishTime.getHours();
            var finishsec = data.FinishTime.getHours();
            var range;
            var rowgrid = $("#CompensatoryDetails").data("kendoGrid").tbody.find("tr");
            var i = -1
            var j = -1
            var tr = container.closest('tr');

            rowgrid.each(function (e) {
                i++;
                var xdate = $("#Dateid" + i).val();
                rowgrid.each(function (e) {
                    j++;
                    var ydate = $("#Dateid" + j).val();
                    if (i !== j) {
                        if (xdate == ydate) {
                            alert("Date you have chosen already exists, please choose another date..!!")
                        }
                    }
                });
            });
            debugger;
            if ((finish + finishsec) <= start) {
                alert("FinishTime can not be smaller than the starttime..!!")
            }

            if (start < finish) {
                range = finish - start
                data.set("CmpTotalHours", range);
                data.CmpTotalHours = range;
                data.set("TotalDay", range / 12)
            }
            data.set("EditMode", 1);
        }

        function onDataBoundDependentDetails(e) {
            var grid = $("#CompensatoryDetails").data("kendoGrid");
            hideDeletedRowKendoDetail(grid);
        }

        function GetDetailComplist(dataItem) {
            var data = $("#CompensatoryDetails").data("kendoGrid").dataSource.data();
            return data.indexOf(dataItem);
        }

    </script>
}





