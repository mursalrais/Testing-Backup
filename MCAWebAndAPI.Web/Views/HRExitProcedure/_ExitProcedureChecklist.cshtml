@using MCAWebAndAPI.Model.ViewModel.Form.HR
@using MCAWebAndAPI.Model.ViewModel.Control

@model ExitProcedureVM

<div class="col-sm-12">
    @(Html.Kendo().Grid<ExitProcedureChecklistVM>()
        .Name("ExitProcedureChecklist")
        //.ToolBar(tools => tools.Create().Text("Add New Fee"))
        .Editable(editable => editable.Mode(GridEditMode.InLine))
        .Columns(columns =>
        {
            columns.Bound(p => p.ID).Hidden();
            columns.Bound(p => p.ItemExitProcedure);
            columns.Bound(p => p.ApproverUnit).ClientTemplate("#=  ApproverUnit.Text #")
            .EditorViewData(
            new
            {
                BindTo = ExitProcedureChecklistVM.GetUnitOptions()
            });
            columns.Bound(p => p.ApproverPosition).ClientTemplate("#= ApproverPosition.Text #")
            .EditorViewData(
            new
            {
                DataTextField = "PositionName",
                DataValueField = "ID",
                ActionName = "GetApproverPositions",
                ControllerName = "HRExitProcedure",
                Filter = "filterApproverPosition",
                Cascade = "ApproverUnit"
            });
            columns.Bound(p => p.ApproverUserName).ClientTemplate("#= ApproverUserName.Text #")
            .EditorViewData(
            new
            {
                DataTextField = "Name",
                DataValueField = "ID",
                ActionName = "GetApproverNames",
                ControllerName = "HRExitProcedure",
                Filter = "filterApproverName",
                Cascade = "ApproverPosition_Value"
            });
            columns.Bound(p => p.DateOfApproval).Hidden().ClientTemplate("#= kendo.toString(DateOfApproval, 'MM/dd/yyyy') #");
            columns.Bound(p => p.CheckListItemApproval).Hidden().ClientTemplate("#= CheckListItemApproval.Text #")
            .EditorViewData(
            new
            {
                BindTo = ExitProcedureChecklistVM.GetCheckListItemApproval()
            });
            columns.Bound(p => p.Remarks);
            columns.Command(command => { command.Edit(); });
        })
        .ToolBar(toolbar => toolbar.Create())
        .DataSource(
            dataSource => dataSource
            .Ajax()
            .PageSize(10)
            .Model(model =>
            {
                model.Id(p => p.ID);
                model.Field(p => p.ApproverUnit).DefaultValue(ExitProcedureChecklistVM.GetUnitDefaultValue());
                model.Field(m => m.ApproverPosition).DefaultValue(AjaxComboBoxVM.GetDefaultValue());
                model.Field(m => m.ApproverUserName).DefaultValue(AjaxComboBoxVM.GetDefaultValue());
                model.Field(p => p.ItemExitProcedure);
                model.Field(p => p.DateOfApproval);
                model.Field(p => p.CheckListItemApproval).DefaultValue(ExitProcedureChecklistVM.GetCheckListItemApprovalDefaultValue());
                model.Field(p => p.Remarks);
            })
        .Create(update => update.Action("Grid_Create", "HRExitProcedure").Type(HttpVerbs.Post))
        .Read(read => read.Action("Grid_Read", "HRExitProcedure").Type(HttpVerbs.Post))
        .Update(update => update.Action("Grid_Update", "HRExitProcedure").Type(HttpVerbs.Post))
        //.Destroy(update => update.Action("Grid_Destroy", "HRExitProcedure").Type(HttpVerbs.Post))
        )
    )
</div>

<script>

    function filterApproverPosition(e) {
        return {
            approverUnit: $("#ApproverUnit").data("kendoDropDownList").value()
        };
    }

    function filterApproverName(e) {
        return {
            position: $("#ApproverPosition_Value").data("kendoDropDownList").value()
        };
    }
</script>