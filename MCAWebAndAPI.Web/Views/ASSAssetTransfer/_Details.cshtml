@using MCAWebAndAPI.Model.ViewModel.Form.Asset



@model IEnumerable<AssetTransferDetailVM>

@{
    var index = 0;
}

<div class="col-md-12" style="margin-bottom: 20px">
    @(Html.Kendo().Grid(Model)
                        .Name("Details")
                        .ToolBar(tools => tools.Create().Text("Add New"))
                        .Editable(editable => editable.Mode(GridEditMode.InCell)
                        .CreateAt(GridInsertRowPosition.Bottom))
                        .Columns(columns =>
                        {

                            columns.Bound(p => p.AssetSubAsset).ClientTemplate("#= AssetSubAsset.Text #" +
                                  "<input type='hidden' class='asset' name='Details[#= getWorkingRelationshipDetails(data)#].AssetSubAsset.Value' value='#= AssetSubAsset.Value #' />"
                                ).EditorViewData(new
                                {
                                    DataTextField = "Text",
                                    DataValueField = "Value",
                                    ControllerName = "ASSAssetTransfer",
                                    ActionName = "GetAssetSubSAssetGrid"
                                }).Width(200);

                            columns.Bound(p => p.Province).ClientTemplate("#= Province.Text #" +
                              "<input type='hidden' class='province' name='Details[#= getWorkingRelationshipDetails(data)#].Province.Value' value='#= Province.Value #' />"
                            ).EditorViewData(new
                            {
                                DataTextField = "Text",
                                DataValueField = "Value",
                                ControllerName = "ASSAssetTransfer",
                                ActionName = "GetProvinceGrid"
                            }).Width(600);

                            columns.Bound(p => p.ProvinceTo).ClientTemplate("#= ProvinceTo.Text #" +
                              "<input type='hidden' class='provinceto' name='Details[#= getWorkingRelationshipDetails(data)#].ProvinceTo.Value' value='#= ProvinceTo.Value #' />"
                            ).EditorViewData(new
                            {
                                DataTextField = "Text",
                                DataValueField = "Value",
                                ControllerName = "ASSAssetTransfer",
                                ActionName = "GetProvinceToGrid"
                            }).Width(600);

                            columns.Bound(p => p.Remarks).HtmlAttributes(new { @class = "remarks" }).ClientTemplate("#= Remarks #" +
            "<input type='hidden' name='Details[#= getWorkingRelationshipDetails(data)#].Remarks' value='#= Remarks #' />"
            );

                            columns.Bound(p => p.Status).HtmlAttributes(new { @class = "status" }).ClientTemplate("#= Status #" +
            "<input type='hidden' name='Details[#= getWorkingRelationshipDetails(data)#].Status' value='#= Status #' />"
            );

                            columns.Bound(p => p.ID).Hidden().ClientTemplate("#= ID #" +
              "<input type='hidden' name=Details[#= getWorkingRelationshipDetails(data)#].ID value=#= ID # />"


            );
                            columns.Bound(p => p.EditMode).Hidden()
                                     .ClientTemplate("#= EditMode #<input type='hidden' name='Details[#= getWorkingRelationshipDetails(data)#].EditMode' value='#= EditMode #' />");
                            columns.Command(command => command.Custom("Delete").HtmlAttributes(new { @class = "btn btn-danger" })
                                        .Click("onDeleteKendoDetail")).Width(100);
                        })
        .Events(e =>
        {
            e.Edit("onCustomEditKendoDetail");
            e.DataBound("onDataBoundWorkingRelationship");
        })
        .DataSource(dataSource => dataSource.Ajax()
                   .Model(model =>
                   {
                       model.Id(p => p.ID);
                       model.Field(m => m.AssetSubAsset).DefaultValue(AssetTransferDetailVM.GetAssetSubAssetDefaultValue());
                       model.Field(m => m.Province).DefaultValue(AssetTransferDetailVM.GetProvinceDefaultValue());
                       model.Field(m => m.ProvinceTo).DefaultValue(AssetTransferDetailVM.GetProvinceToDefaultValue());
                       model.Field(m => m.Remarks);
                       model.Field(m => m.Status).Editable(false);

                   })
                   .ServerOperation(false)
        )
    )
</div>
<script>
    $(document).ready(function () {
        var grid = $("#Details").data("kendoGrid");
        $(grid.tbody).on("change", "td", function (e) {
            var row = $(this).closest("tr");
            var rowIdx = $("tr", grid.tbody).index(row);
            var colIdx = $("td", row).index(this);
            //alert(colIdx);
            if (colIdx == 2) {
                //alert(colIdx);
                //row.find("td:eq(2)").text(Province);
                //var url = "/ASSAssignmentOfAsset/GetOfficeGrid?province=" + Province;
                //$.getJSON(url, function (data) {

                //})
            }
        });
    })

    function onAssetChange(e) {
        var res = this.dataItem(e.item).split("-")
        //alert("berubah jadiii " + this.dataItem(e.item));
    }

    function getWorkingRelationshipDetails(dataItem) {
        var data = $("#Details").data("kendoGrid").dataSource.data();
        //data.set('AssetSubAsset', data.AssetSubAsset);
        return data.indexOf(dataItem);

        var gridRows = this.tbody.find("tr");
        gridRows.each(function (e) {
            //var duedate = $(this).find(".duedate");
            //alert("baris ke : " + e);
        });

    }

    function onCustomEditKendoDetail(e) {
        if (!e.model.isNew()) {
            var container = e.container;
            var tr = container.closest('tr');
            var data = this.dataItem(tr); //get the row data so it can be referred later
            // 1 is Item.Mode.UPDATED
            data.set("EditMode", 1);
        }
        if (isCustomAdd && e.model.isNew()) {
            isCustomAdd = false;
            $(e.container).find("[name='Details']").val(customRowDataItem.Details).change();
        }
    }
    function onDataBoundWorkingRelationship(e) {
        var grid = $("#Details").data("kendoGrid");
        hideDeletedRowKendoDetail(grid);
    }
</script>

<style>
    /*.k-dropdown-wrap {
        width: 600px;
    }*/

    .k-dirty-cell {
        width: 200px;
    }

    .k-list-container .k-list .k-item {
        white-space: nowrap;
    }
</style>
