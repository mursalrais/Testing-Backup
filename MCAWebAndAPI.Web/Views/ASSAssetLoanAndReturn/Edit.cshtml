@using MCAWebAndAPI.Model.ViewModel.Form.Asset

@model AssetLoanAndReturnHeaderVM

@using (Ajax.BeginForm("Update", "ASSAssetLoanAndReturn",
                                                                                                                FormMethod.Post,
                                                                                                                new AjaxOptions
                                                                                                                {
                                                                                                                    OnBegin = "onBeginForm",
                                                                                                                    OnComplete = "onCompleteForm",
                                                                                                                    OnSuccess = "onSuccessFormEmbed",
                                                                                                                    OnFailure = "onFailureForm"
                                                                                                                }, new { @class = "form-horizontal" }))


{
    <fieldset>
        <legend>Form Asset Loan & Return</legend>
        @Html.AntiForgeryToken()
        @Html.ValidationSummary()

        <div class="col-md-6">
            <div class="form-group">
                @Html.Bootstrap().LabelFor(m => m.TransactionType).Class("col-md-4 control-label")
                <div class="col-md-8">
                    @Html.DisplayFor(m => m.TransactionType)
                </div>
            </div>
            <div class="form-group">
                @Html.Bootstrap().LabelFor(m => m.Professional).Class("col-md-4 control-label")
                <div class="col-md-8">
                    @Html.EditorFor(m => m.Professional)
                </div>
            </div>
            <div class="form-group">
                @Html.Bootstrap().LabelFor(m => m.Project).Class("col-md-4 control-label")
                <div class="col-md-8">
                    @*@Html.DisplayFor(m => m.Project)*@
                    <input type="text" name="Project" disabled value="@Model.Project" id="Project" style="width: 100%;" />
                </div>
            </div>
            <div class="form-group">
                @Html.Bootstrap().LabelFor(m => m.ContactNo).Class("col-md-4 control-label")
                <div class="col-md-8">
                    @*@Html.DisplayFor(m => m.ContactNo)*@
                    <input type="text" name="contactno" disabled value="@Model.ContactNo" id="contactno" style="width: 100%;" />
                </div>
            </div>
            <div class="form-group">
                @Html.Bootstrap().LabelFor(m => m.LoanDate).Class("col-md-4 control-label")
                <div class="col-md-8">
                    @Html.EditorFor(m => m.LoanDate,new { id = "loandate" })
                </div>
            </div>
            <div class="form-group">
                @Html.Bootstrap().LabelFor(m => m.Purpose).Class("col-md-4 control-label")
                <div class="col-md-8">
                    @Html.EditorFor(m => m.Purpose)
                </div>
            </div>
        </div>

        <legend>Asset Loan and Return Detail</legend>
        <div class="row">
            @Html.Partial("_Details", Model.AssetLoanAndReturnItem)
        </div>

    </fieldset>

        @Html.HiddenFor(m => m.ID)
        @Html.HiddenFor(m => m.CancelURL)
        <div>
            <center>
                <input class="k-button k-button-icontext k-grid-add" onclick="return saveAssignment()" type="submit" value="Save" />
                <a href="@Model.CancelURL" target='_parent'>
                    <input class="k-button k-button-icontext k-grid-add" size="4" value="Cancel" />
                </a>
            </center>
        </div>



}

@section scripts{
    <script type="text/javascript">

        $(document).ready(function () {
            document.getElementByClass('returndate').value = "";
        })

            function onSelectedAcceptanceMemo(e) {
                var res = this.dataItem(e.item).split("-")
                //alert("Acceptance Memo ID : " + res[0]);
                var url = "/ASSAssetAcquisition/GetAcceptanceMemoInfo?IDAcceptanceMemo=" + res[0];
                $.getJSON(url, function (data) {
                    document.getElementById('Vendor').value = data.VendorID + "-" + data.VendorName;
                    $('#Vendor').prop('value', data.VendorName);
                    document.getElementById('Vendor').readOnly = true;

                    document.getElementById('PoNo').value = data.PoNo;
                    $('#PoNo').prop('value', data.PoNo);
                    document.getElementById('PoNo').readOnly = true;
                    //$('#Vendor').prop('value', data.VendorID + "-" + data.VendorName);
                    //$('#PoNo').prop('value', data.PoNo);
                });
            }

            function saveAssignment() {

                var asset = document.getElementsByClassName("asset");
                var estdate = document.getElementsByClassName("estdate");
                var loandate = new Date($('#LoanDate').val());
                var grid = $('#AssetLoanAndReturnItem').data("kendoGrid").dataSource.data();

                for (var j = 0; j < grid.length; j++) {
                    if (grid[j].EstReturnDate < loandate) {
                        var data = { errorMessage: "Est Return Date cannot be less than Loan Date", success: false };
                        showModalWindow(data);
                        return false;
                    }
                }

                console.log(loandate);
                //for (var j = 0; j < asset.length; j++) {
                //    if (asset[j].value == "null") {
                //        alert("Asset Sub Asset / Province cannot be null!");
                //        return false;
                //    }
                //}

                //var dateOne = new Date(2010, 00, 15); //Year, Month, Date
                //var dateTwo = new Date(2011, 00, 15); //Year, Month, Date
                //if (dateOne > dateTwo) {
                //    alert("Date One is greather then Date Two.");
                //} else {
                //    alert("Date Two is greather then Date One.");
                //}



            }

            function OnSelectProfessionalName(e) {
                var res = this.dataItem(e.item).split("-")
                //var res = this.dataItem(e.item).split("-")
                //alert("Acceptance Memo ID : " + res[0]);
                var dataItem = this.dataItem(e.item);
                var url = "/ASSAssetLoanAndReturn/GetProfessionalInfo?IDProfessional=" + res[0];
                $.getJSON(url, function (data) {
                    document.getElementById('Project').value =  data.ProjectName;
                    $('#Project').prop('value', data.ProjectName);
                    document.getElementById('Project').readOnly = true;

                    document.getElementById('ContactNo').value = data.ContactNo;
                    $('#ContactNo').prop('ContactNo', data.ContactNo);
                    document.getElementById('ContactNo').readOnly = true;
                    //$('#Vendor').prop('value', data.VendorID + "-" + data.VendorName);
                    //$('#PoNo').prop('value', data.PoNo);
                });

            }
    </script>
}