@using MCAWebAndAPI.Model.ViewModel.Form.HR

@model PSAManagementVM

@{
    ViewBag.Title = "Form Create PSA Management";
}

@using (Html.BeginForm("CreatePSAManagement", "HRPSAManagement", FormMethod.Post,
                                                                 new
                                                                 {
                                                                     @class = "form-horizontal",
                                                                     enctype = "multipart/form-data"
                                                                 }))
{
    <fieldset>
        <legend>PSA Management Data</legend>
        <div class="row">
            @Html.Partial("_PSAManagementData", Model)
        </div>
        <legend>Documents</legend>
        <div class="row">
            @Html.Partial("_DocumentDetails", Model)
        </div>
    </fieldset>
    <div class="form-actions">
        <div class="row">
            <div class="col-md-12">
                <button id="submit-button" class="btn btn-primary" type="submit">
                    <i class="fa fa-save"></i>
                    Submit
                </button>
            </div>
        </div>
    </div>
}

    @section scripts{
        <script type="text/javascript">
          
            
            $(document).ready(function () {
                $("#submit-button").click(function () {
                $("form").submit();
            });

        });

       
        function onSuccess(data) {
            window.location.href = data.urlToRedirect;
        }

        function onFailure(data) {
            window.location.href = data.urlToRedirect;
        }
        
        
            function OnSelectAssetHolderFrom(e) {
                var dataItem = this.dataItem(e.item);

                var dateOfNewPSA = $("#DateOfNewPSA").val();

                //var datenewpsa = new Date(dateOfNewPSA);
                //var datenewpsainsecond = datenewpsa.getTime();

                //console.log(dateOfNewPSA);
                //console.log(datenewpsainsecond);

                if ($("#IsRenewal_Value").val() == "Yes")
                {

                    var url = "/HRPSAManagement/GetRenewal/" + dataItem.ID;

                    $.getJSON(url, function (result) {
                        //console.log(result);
                        var renewalnumber = result[0].PSARenewalNumber + 1;

                        //var expirydate = result[0].PSAExpiryDate;
                        var expirydatebefore = result[0].ExpiryDateBefore
                        var expdate = new Date(expirydatebefore);

                        var dateexpdate = expdate.getDate();
                        var dateexpdateint = parseInt(dateexpdate);

                        var calcexpdate = dateexpdateint + 1;

                        var setexpdate = new Date(expdate.setDate(calcexpdate));
                        var expirydate = setexpdate.getMonth() + 1 + '/' + setexpdate.getDate() + '/' + setexpdate.getFullYear();
                        //var testdate = new Date(expirydate);

                        console.log(expirydate);

                        $('#PSARenewalNumber').prop('value', renewalnumber);
                        $('#PSARenewalNumber').prop('readonly', true);
                        $('#ExpiryDateBefore').prop('value', expirydate);

                        $("#DateOfNewPSA").data("kendoDatePicker").min(expirydate);


                        var dateOfNewPSA = $("#DateOfNewPSA").val();
                        var dateofnewpsa = new Date(dateOfNewPSA);
                        var monthpsa = dateofnewpsa.getMonth();
                        var monthint = parseInt(monthpsa);
                        var datepsa = dateofnewpsa.getDate();

                        var tenure = $("#Tenure").val();
                        var tenureint = parseInt(tenure);
                        var addtenure = tenureint + monthint;

                        var setmonth = new Date(dateofnewpsa.setMonth(addtenure));

                        var psaexpirydate = setmonth.getMonth() + 1 + '/' + setmonth.getDate() + '/' + setmonth.getFullYear();
                        $("#PSAExpiryDate").val(psaexpirydate);

                        /*
                        if (datenewpsainsecond < expirydate)
                        {
                            console.log("Date of New PSA Less Than Expiry Date");
                        }
                        else
                        {
                            console.log("Date of New PSA More Than Expiry Date");
                        }
                        */

                    })
                }

                
            }

            
            function OnSelectPosition(e) {
                var dataItem = this.dataItem(e.item);
                var urlKeyPosition = "/HRDataMaster/GetKeyPosition/" + dataItem.ID;
                               
                $.getJSON(urlKeyPosition, function (result) {

                    if (result[0].isKeyPosition == "Yes")
                    {
                        $('#KeyPosition').prop('value', "You must upload file with format name: MCCNoObjectionLetter-XXXX" + "XXXX is a ordering number such as: 0001");
                        $('#DocumentType').prop('value', "MCC No Objection Letter");
                        $('#KeyPositionValue').prop('value', "Yes");
                   
                    }
                    else
                    {
                        $('#KeyPosition').prop('value', "You must upload file with format name: PSADocuments-MMDDYYYY");
                        $('#DocumentType').prop('value', "PSA Document");
                        $('#KeyPositionValue').prop('value', "No");
                    }
                })

                
            }

            
            $(document).ready(function () {

                $("#Tenure").on('input', function () {
                    sumCal();
                });

                function sumCal() {

                    var dateOfNewPSA = $("#DateOfNewPSA").val();
                    var dateofnewpsa = new Date(dateOfNewPSA);
                    var monthpsa = dateofnewpsa.getMonth();
                    var monthint = parseInt(monthpsa);
                    var datepsa = dateofnewpsa.getDate();

                    var tenure = $("#Tenure").val();
                    var tenureint = parseInt(tenure);
                    var addtenure = tenureint + monthint;

                    var setmonth = new Date(dateofnewpsa.setMonth(addtenure));

                    var psaexpirydate = setmonth.getMonth() + 1 + '/' + setmonth.getDate() + '/' + setmonth.getFullYear();
                    $("#PSAExpiryDate").val(psaexpirydate);
                }

            });

            
           function isrenewalChanged() {

                if ($("#IsRenewal_Value").prop("value", "No"))
                {
                    
                    $("#PSARenewalNumber").prop("readonly", "true");
                    $("#PSARenewalNumber").prop("value", 0);
                }
                    ;
           }

            /*
           function onUpload(e) {
               var files = e.files;

               var filesLength = files.name.length();
               console.log(filesLength);

               var indexMCC = files.name.indexOf("MCCNoObjectionLetter");
               console.log(indexMCC);

               $.each(files, function () {
                   if (this.name.indexOf("MCCNoObjectionLetter") < 0) {
                       alert(this.name + " error!");
                       e.preventDefault(); // This cancels the upload for the file
                   }
               });
               
           }
           */
            /*
           function expirydate()
           {

           }
           */           
        </script>
    }
