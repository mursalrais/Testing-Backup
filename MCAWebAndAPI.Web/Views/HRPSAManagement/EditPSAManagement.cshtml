@using MCAWebAndAPI.Model.ViewModel.Form.HR

@model PSAManagementVM

@{
    ViewBag.Title = "Form Edit PSA Management";
}

@using (Ajax.BeginForm("UpdatePSAManagement", "HRPSAManagement", FormMethod.Post, new AjaxOptions
{
    OnBegin = "onBeginForm",
    OnFailure = "onFailureForm",
    OnSuccess = "onSuccessForm",
    OnComplete = "onCompleteForm"
}, new
{
    @class = "form-horizontal"
}))
{


    <fieldset>
        <legend>Edit PSA Management Data</legend>
        <div class="row">
            @Html.Partial("_PSAManagementDataEdit", Model)
        </div>
        
        <legend>Documents</legend>
        <div class="row">
            @Html.Partial("_DocumentDetailsDisplay", Model.DocumentUrl)
        </div>
    </fieldset>

}

    <div class="form-actions">
    <div class="row">
        <div class="col-md-12">
            
            <button id="submit-button" class="btn btn-primary" type="button" onclick="checkOverlapping()">
                <i class="fa fa-save"></i>
                Submit
            </button>
        </div>
    </div>
</div>

@section scripts{
    <script type="text/javascript">

        function checkOverlapping() {

            var psaRenewalNumber = $("#PSARenewalNumber").val()
            var strPSARenewal = $("#StrPSARenewal").val()

            if (strPSARenewal != "0") {

                var dateOfNewPSA = $("#DateOfNewPSA").val();
                var dateofNewPSADate = new Date(dateOfNewPSA);
                var psaExpiryDate = $("#PSAExpiryDate").val();
                var psaExpiryDateDate = new Date(psaExpiryDate);
                var dateOfNewPSABefore = $("#DateOfNewPSABefore").val();
                var dateofNewPSABeforeDate = new Date(dateOfNewPSABefore);
                var psaExpiredDateBefore = $('#ExpireDateBefore').val();
                var psaExpiryDateBeforeDate = new Date(psaExpiredDateBefore);

                //Cek Overlapping Date of New PSA
                if ((dateofNewPSADate > dateofNewPSABeforeDate) && (dateofNewPSADate < psaExpiryDateBeforeDate)) {
                    //Warning overlapping star tdate

                    var confirmationValue = confirm("Date of New PSA for New Contract is less than PSA Expiry Date on last contract");
                    if (confirmationValue == true) {
                        $("form").submit();
                    }
                    if (confirmationValue == false) {

                        return false;
                    }
                }
                    //Cek Overlapping PSA Expired Date
                else if ((dateofNewPSADate > dateofNewPSABeforeDate) && (dateofNewPSADate < psaExpiryDateBeforeDate) && (psaExpiryDateDate < psaExpiredDateBeforeDate)) {
                    //Warning overlapping star date dan end date
                    var confirmationValue = confirm("Range date of New Contract is between of last contract")
                    if (confirmationValue == true) {
                        $("form").submit();
                    }
                    if (confirmationValue == false) {
                        return false;
                    }
                }
                else {
                    $("form").submit();
                }
            }
        }

        function onSuccess(data) {
            window.location.href = data.urlToRedirect;
        }

        function onFailure(data) {
            window.location.href = data.urlToRedirect;
        }


            function OnSelectAssetHolderFrom(e) {
                var dataItem = this.dataItem(e.item);

                var dateOfNewPSA = $("#DateOfNewPSA").val();

                var url = "/HRPSAManagement/GetRenewal/" + dataItem.ID;

                $.getJSON(url, function (result) {

                    if (result.length != 0) {
                        
                        var renewalnumber = result[0].PSARenewalNumber + 1;
                        var expirydatebefore = result[0].ExpiryDateBefore
                        var expdate = new Date(expirydatebefore);
                        var dateexpdate = expdate.getDate();
                        var dateexpdateint = parseInt(dateexpdate);
                        var calcexpdate = dateexpdateint + 1;
                        var setexpdate = new Date(expdate.setDate(calcexpdate));
                        var expirydate = setexpdate.getMonth() + 1 + '/' + setexpdate.getDate() + '/' + setexpdate.getFullYear();

                        $('#HidRenewalNumber').prop('value', renewalnumber);
                        $('#ExpiryDateBefore').prop('value', expirydate);
                        $("#IsRenewal_Value").data("kendoDropDownList").select(0);
                        $("#IsRenewal_Value").data("kendoDropDownList").readonly();
                        $("#PSARenewalNumber").prop("readonly", "false");
                        $("#PSARenewalNumber").prop("value", renewalnumber);
                        $("#DateOfNewPSA").data("kendoDatePicker").min(expirydate);
                        $("#DateOfNewPSA").prop('value', expirydate);
                        $("#Tenure").prop('value', 0);
                        $("#PSAExpiryDate").prop('value', expirydate);
                        $("#LastWorkingDate").prop('value', expirydate);
                    }

                    if (result.length == 0)
                    {
                        $("#IsRenewal_Value").data("kendoDropDownList").select(1);
                        $("#IsRenewal_Value").data("kendoDropDownList").readonly();

                        $("#PSARenewalNumber").prop("readonly", "true");
                        $("#PSARenewalNumber").prop("value", 0);

                        var joinDate = $("#JoinDate").val();

                        $("#DateOfNewPSA").data("kendoDatePicker").min(joinDate);
                        $("#DateOfNewPSA").prop("value", joinDate);

                        $("#Tenure").prop('value', 0);

                        $("#PSAExpiryDate").prop('value', joinDate);
                        $("#LastWorkingDate").prop('value', joinDate);
                    }

                })
            }

            function OnSelectPosition(e) {
                var dataItem = this.dataItem(e.item);
                var urlKeyPosition = "/HRDataMaster/GetKeyPosition/" + dataItem.ID;

                $.getJSON(urlKeyPosition, function (result) {

                    if (result[0].isKeyPosition == "Yes")
                    {
                        $('#KeyPosition').prop('value', "You must upload file with format name: MCCNoObjectionLetter-XXXX" + "XXXX is a ordering number such as: 0001");
                        $('#DocumentType').prop('value', "MCC No Objection Letter");
                        $('#KeyPositionValue').prop('value', "Yes");

                    }
                    else
                    {
                        $('#KeyPosition').prop('value', "You must upload file with format name: PSADocuments-MMDDYYYY");
                        $('#DocumentType').prop('value', "PSA Document");
                        $('#KeyPositionValue').prop('value', "No");
                    }
                    
                })


            }


            $(document).ready(function () {

                $("#Tenure").on('input', function () {
                    sumCal();
                });

                function sumCal() {

                    var dateOfNewPSA = $("#DateOfNewPSA").val();
                    var dateofnewpsa = new Date(dateOfNewPSA);
                    var monthpsa = dateofnewpsa.getMonth();
                    var monthint = parseInt(monthpsa);
                    var datepsa = dateofnewpsa.getDate();

                    var tenure = $("#Tenure").val();
                    var tenureint = parseInt(tenure);
                    var addtenure = tenureint + monthint;

                    var setmonth = new Date(dateofnewpsa.setMonth(addtenure));

                    var psaexpirydate = setmonth.getMonth() + 1 + '/' + setmonth.getDate() + '/' + setmonth.getFullYear();
                    $("#PSAExpiryDate").val(psaexpirydate);
                    $("#LastWorkingDate").val(psaexpirydate);
                }

            });

            $(document).ready(function () {


                function onChange() {

                    if ($("#IsRenewal_Value").val() == "No")
                    {
                        var joinDate = $("#JoinDate").val();

                        $('#DateOfNewPSA').prop('value', joinDate);
                        $("#DateOfNewPSA").data("kendoDatePicker").min(joinDate);
                        $("#PSAExpiryDate").val(joinDate);
                        $("#LastWorkingDate").val(joinDate);

                    }

                }

                $("#JoinDate").kendoDatePicker(
                { change: onChange }
                );

            });


           function isrenewalChanged() {

               /*
               if ($("#IsRenewal_Value").val() == "No")
                {

                    $("#PSARenewalNumber").prop("readonly", "true");
                    $("#PSARenewalNumber").prop("value", 0);
                }
                */
               if ($("#IsRenewal_Value").val() == "Yes")
                {
                    $("#PSARenewalNumber").prop("readonly", "true");
                    var renewalnumber = $("#HidRenewalNumber").val();
                    $('#PSARenewalNumber').prop('value', renewalnumber);
                    var expirydate = $("#ExpiryDateBefore").val();
                    $("#DateOfNewPSA").data("kendoDatePicker").min(expirydate);
                    $('#PSAExpiryDate').prop('value', expirydate);
                    $('#LastWorkingDate').prop('value', expirydate);

                    
                 }
           }

           $(document).ready(function () {
               $("#Tenure").kendoNumericTextBox({
                   change: onChange,
                   spin: onSpin
               });

               function onChange() {
                   sumCal();
               }

               function onSpin() {
                   sumCal();
               }

               function sumCal() {

                   var dateOfNewPSA = $("#DateOfNewPSA").val();
                   var dateofnewpsa = new Date(dateOfNewPSA);
                   var monthpsa = dateofnewpsa.getMonth();
                   var monthint = parseInt(monthpsa);
                   var datepsa = dateofnewpsa.getDate();
                   var tenure = $("#Tenure").val();
                   var tenureint = parseInt(tenure);
                   var addtenure = tenureint + monthint;
                   var setmonth = new Date(dateofnewpsa.setMonth(addtenure));
                   var psaexpirydate = setmonth.getMonth() + 1 + '/' + setmonth.getDate() + '/' + setmonth.getFullYear();

                   $("#PSAExpiryDate").val(psaexpirydate);
                   $("#LastWorkingDate").val(psaexpirydate);

                   var datepsa = $("#DateOfNewPSA").val();
                   var dateofnewpsabefore = $("#DateOfNewPSABefore").val();
                   var expirydate = $("#DateOfNewPSABefore").val();
                   var expiredatebefore = $("#ExpireDateBefore").val();

               }

           });

           //function onSelectPSA(e) {

           //    $.each(e.files, function (index, value) {
                   
           //        if ($("#KeyPositionValue").val() == "Yes")
           //        {
           //            if ((index == 0))
           //            {
           //                if (value.name.indexOf("MCCNoObjectionLetter") < 0)
           //                {
           //                    alert("You Must Upload MCCNoObjectionLetter Document");
           //                    e.preventDefault();
           //                }
           //                if (value.name.indexOf("MCCNoObjectionLetter") >= 0)
           //                {
           //                    //Hanya Untuk Testing
           //                    alert("MCCNoObjectionLetter already exist");
           //                    e.preventDefault();
           //                }
           //            }
           //            if(index == 1)
           //            {
           //                if (value.name.indexOf("PSADocument") < 0)
           //                {
           //                    alert("You Must Upload PSADocument Document");
           //                    e.preventDefault();
           //                }
           //                if (value.name.indexOf("PSADocument") >= 0)
           //                {
           //                    //Hanya Untuk Testing
           //                    alert("PSADocument already exist");
           //                    e.preventDefault();
           //                }
           //            }
           //        }

           //    });

           //}


    </script>
}