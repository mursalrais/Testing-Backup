@using MCAWebAndAPI.Model.ViewModel.Form.HR
@using MCAWebAndAPI.Model.Common
@model TimesheetVM

<div class="form-horizontal">
    <fieldset>
        <legend>Timesheet</legend>
        <div class="row">
            <div class="col-sm-6">
                @using (Ajax.BeginForm("UpdatePeriod", "HRTimesheet", new AjaxOptions
                {
                    OnComplete = "onCompleteUpdatePeriod"
                }, new { id = "FormUpdatePeriod" }))
                {
                    @Html.HiddenFor(m => m.UserLogin)
                    <div class="form-group">
                        @Html.Bootstrap().LabelFor(m => m.Period).Class("col-sm-4 control-label")
                        <div class="col-sm-8">
                            @Html.EditorFor(m => m.Period)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.Bootstrap().LabelFor(m => m.Name).Class("col-sm-4 control-label")
                        <div class="col-sm-8">
                            @Html.DisplayFor(m => m.Name)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.Bootstrap().LabelFor(m => m.ProjectUnit).Class("col-sm-4 control-label")
                        <div class="col-sm-8">
                            @Html.DisplayFor(m => m.ProjectUnit)
                        </div>
                    </div>
                    <button id="submit-button-update-period" class="btn btn-primary pull-right" type="submit">Set</button>
                }
            </div>
            <div class="col-sm-6">

            </div>
        </div>
        <br />
        <legend>Holidays and Day-Off</legend>
        <div class="row">
            <div class="col-sm-12">
                @(Html.Kendo()
                    .Grid<TimesheetDetailVM>()
                    .Name("TimesheetDetails_Holidays")
                    .Columns(columns =>
                    {
                        columns.Bound(p => p.Date).Format("{0:dddd, MMM d, yyyy}");
                        columns.Bound(p => p.Status);
                        columns.Bound(p => p.FullHalf)
                  .ClientFooterTemplate("Total Day: #=sum#")
                  .ClientGroupFooterTemplate("Subtotal Day: #=sum#");
                    })
                    .DataSource(dataSource => dataSource
                       .Ajax()
                       .Aggregates(aggregates =>
                       {
                           aggregates.Add(p => p.FullHalf).Sum();
                       })
                       .Read("Grid_ReadHolidays", "HRTimesheet")
                       .Group(group => group.Add(p => p.Type))
                    )
                )
            </div>
        </div>
        <br />
        <legend>Working Days</legend>
        <div class="row">
            <div class="col-sm-12">
                @(Html.Kendo()
                    .Grid<TimesheetDetailVM>()
                    .Name("TimesheetDetails_WorkingDays")
                    .Columns(columns =>
                    {
                        columns.Bound(p => p.Date).Format("{0:dddd, MMM d, yyyy}");
                        columns.Bound(p => p.Location);
                        columns.Bound(p => p.FullHalf)
                         .ClientFooterTemplate("Total Day: #=sum#");
                        columns.Bound(p => p.Type).Hidden()
                            .ClientGroupHeaderTemplate("Working Days");
                    })
                    .DataSource(dataSource => dataSource
                       .Ajax()
                       .Read("Grid_ReadWorkingDays", "HRTimesheet")
                       .Sort(s => s.Add(p => p.Date).Ascending())
                       .Aggregates(aggregates =>
                       {
                           aggregates.Add(p => p.FullHalf).Sum();
                       })
                       .Group(group => group.Add(p => p.Type))
                    )
                )
            </div>
        </div>
        <br />
        <br />
        <legend>Add Working Day</legend>
        <div class="row">
            <div class="col-sm-6">
                @using (Ajax.BeginForm("AddTimesheet", "HRTimesheet", new AjaxOptions
            {
                OnComplete = "onCompleteAddTimesheet"
            }, new { id = "FormAddTimesheet" }))
            {
                    <div class="form-group">
                        @Html.Bootstrap().LabelFor(m => m.From).Class("col-sm-4 control-label")
                        <div class="col-sm-8">
                            @(Html.Kendo().DatePicker()
                              .Name("From")
                              .Value(DateTime.Today.AddDays(-7))
                              .Max(DateTime.Today)
                              .Events(e => e.Change("startChange"))
                              .HtmlAttributes(new { @class = "form-control", style = "width: 100%" })
                            )
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.Bootstrap().LabelFor(m => m.To).Class("col-sm-4 control-label")
                        <div class="col-sm-8">
                            @(Html.Kendo().DatePicker()
                              .Name("To")
                              .Value(DateTime.Today)
                              .Min(DateTime.Today.AddDays(-7))
                              .Max(DateTime.Today)
                              .Events(e => e.Change("endChange"))
                              .HtmlAttributes(new { @class = "form-control", style = "width: 100%" })
                            )
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.Bootstrap().LabelFor(m => m.Location).Class("col-sm-4 control-label")
                        <div class="col-sm-8">
                            @Html.EditorFor(m => m.Location)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.Bootstrap().LabelFor(m => m.IsFullDay).Class("col-sm-4 control-label")
                        <div class="col-sm-8">
                            @Html.EditorFor(m => m.IsFullDay)
                        </div>
                    </div>
                    <button id="submit-button-add-timesheet" class="btn btn-primary pull-right" type="submit">Add Working Day</button>
                }
            </div>
            <div class="col-sm-6"></div>
        </div>
    </fieldset>

    <div class="form-actions">
        <div class="row">
            <div class="col-sm-12">
                <button id="print-button" class="btn btn-success" type="button">
                    Submit for Approval
                </button>
                <button id="submit-button" class="btn btn-primary" type="submit">
                    <i class="fa fa-save"></i>
                    Save as Draft
                </button>
            </div>
        </div>
    </div>

</div>

@section scripts{

    <script>


        function onCompleteUpdatePeriod(e) {
            $("#TimesheetDetails_Holidays").data("kendoGrid").dataSource.read();
            $("#TimesheetDetails_Holidays").data("kendoGrid").refresh();

            $("#TimesheetDetails_WorkingDays").data("kendoGrid").dataSource.read();
            $("#TimesheetDetails_WorkingDays").data("kendoGrid").refresh();

            var periodPicker = $("#Period").data("kendoDatePicker");
            var period = periodPicker.value();

            var startPicker = $("#From").data("kendoDatePicker");
            startPicker.min(period);
        
            var endPicker = $("#To").data("kendoDatePicker");
            endPicker.min(period);

        }

        function onCompleteAddTimesheet(e) {
            $("#TimesheetDetails_WorkingDays").data("kendoGrid").dataSource.read();
            $("#TimesheetDetails_WorkingDays").data("kendoGrid").refresh();
        }

        function startChange() {
            var endPicker = $("#To").data("kendoDatePicker"),
                startDate = this.value();

            if (startDate) {
                startDate = new Date(startDate);
                startDate.setDate(startDate.getDate());
                endPicker.min(startDate);
            }
        }

        function endChange() {
            var startPicker = $("#From").data("kendoDatePicker"),
                endDate = this.value();

            if (endDate) {
                endDate = new Date(endDate);
                endDate.setDate(endDate.getDate());
                startPicker.max(endDate);
            }
        }
    </script>
}