@using MCAWebAndAPI.Model.ViewModel.Form.HR
@using MCAWebAndAPI.Model.Common
@model TimesheetVM



    <div class="form-horizontal">

        <fieldset>
        
            <legend>Timesheet</legend>
            <div class="row">
                <div class="col-sm-6">
                    @using (Ajax.BeginForm("UpdatePeriod", "HRTimesheet", new AjaxOptions
                    {
                        OnComplete = "onCompleteUpdatePeriod",
                        OnBegin = "onBeginForm",
                        OnSuccess = "onSuccessFormEmbed",
                        OnFailure = "onFailureForm"
                    }, new { id = "FormUpdatePeriod" }))
                    {
                        @Html.HiddenFor(m => m.ID)
                        @Html.HiddenFor(m => m.UserLogin)
                        @Html.HiddenFor(m => m.ProfessionalID)
                        @Html.DisplayFor(m => m.UserPermission)
                        @Html.HiddenFor(m => m.Name)
                        @Html.HiddenFor(m => m.TimesheetStatus)
                        @Html.HiddenFor(m => m.ApprovalLevel)
                        <div class="form-group">
                            @Html.Bootstrap().LabelFor(m => m.Period).Class("col-sm-4 control-label")
                            <div class="col-sm-8">
                                @Html.EditorFor(m => m.Period)
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.Bootstrap().LabelFor(m => m.ProfessionalName).Class("col-sm-4 control-label")
                            <div class="col-sm-8">
                                @Html.EditorFor(m => m.ProfessionalName)
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.Bootstrap().LabelFor(m => m.ProjectUnit).Class("col-sm-4 control-label")
                            <div class="col-sm-8">
                                @Html.DisplayFor(m => m.ProjectUnit)
                            </div>
                        </div>
                        <button id="submit-button-update-period" class="btn btn-primary pull-right" type="submit">Set</button>
                    }
                </div>
                <div class="col-sm-6">

                </div>
            </div>
            <br/>
            <legend>Holidays and Day-Off</legend>
            <div class="row">
                <div class="col-sm-12">
                    @(Html.Kendo()
                          .Grid<TimesheetDetailVM>()
                          .Name("TimesheetDetails_Holidays")
                          .Columns(columns =>
                          {
                              columns.Bound(p => p.Date).Format("{0:dddd, MMM d, yyyy}");
                              columns.Bound(p => p.Type);
                              columns.Bound(p => p.FullHalf)
                                  .ClientFooterTemplate("Total Day: #=sum#")
                                  .ClientGroupFooterTemplate("Subtotal Day: #=sum#");
                          })
                          .DataSource(dataSource => dataSource
                              .Ajax()
                              .Aggregates(aggregates =>
                              {
                                  aggregates.Add(p => p.FullHalf).Sum();
                              })
                              .Read("GridHolidays_Read", "HRTimesheet")
                              .Group(group => group.Add(p => p.Type))
                          )
                          )
                </div>
            </div>
            <br/>
            <legend>Working Days</legend>
            <div class="row">
                <div class="col-sm-12">
                    @(Html.Kendo()
                          .Grid<TimesheetDetailVM>()
                          .Name("TimesheetDetails_WorkingDays")
                          .Columns(columns =>
                          {
                              columns.Bound(p => p.Date).Format("{0:dddd, MMM d, yyyy}");
                              columns.Bound(p => p.Location);
                              columns.Bound(p => p.LocationID).Hidden();
                              columns.Bound(p => p.ID);
                              columns.Bound(p => p.EditMode);
                              columns.Bound(p => p.FullHalf)
                              .ClientFooterTemplate("Total Day: #=sum#");
                              columns.Bound(p => p.Type).Hidden()
                                  .ClientGroupHeaderTemplate("Working Days");
                          })
                          .DataSource(dataSource => dataSource
                              .Ajax()
                              .Read("GridWorkingDays_Read", "HRTimesheet")
                              .Sort(s => s.Add(p => p.Date).Ascending())
                              .Aggregates(aggregates =>
                              {
                                  aggregates.Add(p => p.FullHalf).Sum();
                              })
                              .Group(group => group.Add(p => p.Type))
                          )
                          )
                </div>
            </div>
            <br/>
            <br/>

            <legend>Add Working Day</legend>
            <div class="row">
                <div class="col-sm-6">
                    @using (Ajax.BeginForm("AddTimesheet", "HRTimesheet", new AjaxOptions
                    {
                        OnComplete = "onCompleteAddTimesheet"
                    }, new {id = "FormAddTimesheet"}))
                    {
                        <div class="form-group">
                            @Html.HiddenFor(m => m.LocationID)
                            @Html.HiddenFor(m => m.LocationName)
                            @Html.Bootstrap().LabelFor(m => m.From).Class("col-sm-4 control-label")
                            <div class="col-sm-8">
                                @(Html.Kendo().DatePicker()
                                      .Name("From")
                                      .Value(DateTime.Today.AddDays(-7))
                                      .Max(DateTime.Today)
                                      .Events(e => e.Change("startChange"))
                                      .HtmlAttributes(new {@class = "form-control", style = "width: 100%"})
                                      )
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.Bootstrap().LabelFor(m => m.To).Class("col-sm-4 control-label")
                            <div class="col-sm-8">
                                @(Html.Kendo().DatePicker()
                                      .Name("To")
                                      .Value(DateTime.Today)
                                      .Min(DateTime.Today.AddDays(-31))
                                      .Max(DateTime.Today)
                                      .Events(e => e.Change("endChange"))
                                      .HtmlAttributes(new {@class = "form-control", style = "width: 100%"})
                                      )
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.Bootstrap().LabelFor(m => m.Location).Class("col-sm-4 control-label")
                            <div class="col-sm-8">
                                @Html.EditorFor(m => m.Location)
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.Bootstrap().LabelFor(m => m.IsFullDay).Class("col-sm-4 control-label")
                            <div class="col-sm-8">
                                @Html.EditorFor(m => m.IsFullDay)
                            </div>
                        </div>
                        <button id="submit-button-add-timesheet" class="btn btn-primary pull-right" type="submit">Add Working Day</button>
                    }
                </div>
                <div class="col-sm-6"></div>
            </div>


        </fieldset>

        <div class="form-actions">
        
                <div class="row">
                    <div class="col-sm-12">
                        <button id="submit-button" class="btn btn-success" type="button">
                            Submit for Approval
                        </button>
                        <button id="draft-button" class="btn btn-primary" type="button">
                            <i class="fa fa-save"></i>
                            Save as Draft
                        </button>

                        <button id="approve-button" class="btn btn-success" type="button">
                           Approve
                        </button>

                        <button id="reject-button" class="btn btn-primary" type="button">
                            <i class="fa fa-save"></i>
                            Reject
                        </button>

                    </div>
                </div>
           
        </div>

    </div> 



@section scripts{

    <script>
        function save(status,level) {
            $("#TimesheetStatus").val(status);
            $("#ApprovalLevel").val(level);
            $('form').prop('action', '/HRTimesheet/UpdateTimesheet');
            $("form").submit();
        }

        $(document)
            .ready(function () {

                var strPermission = $("#UserPermission").val();
                var strStatus = $("#TimesheetStatus").val();
                var period = $("#Period").data("kendoDatePicker");
                var dateto = $("#To").data("kendoDatePicker");
                var datefrom = $("#From").data("kendoDatePicker");
                var location = $("#Location_Value").data("kendoDropDownList");
                if (strStatus !== "Draft") {
                    
                    if (strPermission === "Approver") {
                        $("#submit-button-update-period").prop("disabled", true);
                        $("#submit-button-add-timesheet").prop("disabled", true);
                        $("#IsFullDay").prop("disabled", true);
                        $("#submit-button-update-period").prop("disabled", true);
                        $("#draft-button").hide();
                        $("#submit-button").hide();
                        period.enable(false);
                        dateto.enable(false);
                        datefrom.enable(false);
                        location.enable(false);
                    }
                    else if (strPermission === "Professional") {
                        $("#submit-button-update-period").prop("disabled", true);
                        $("#submit-button-add-timesheet").prop("disabled", true);
                        $("#IsFullDay").prop("disabled", true);
                        $("#submit-button-update-period").prop("disabled", true);
                        $("#draft-button").hide();
                        $("#submit-button").hide();
                        $("#approve-button").hide();
                        $("#reject-button").hide();
                        period.enable(false);
                        dateto.enable(false);
                        datefrom.enable(false);
                        location.enable(false);
                    }
                }

                $("#Location_Value").data("kendoDropDownList").value("xxx");

                var professional = $("#ProfessionalName_Value").data("kendoDropDownList");

              
                if (strPermission !== "HR") {
                    professional.enable(false);
                }

                $("#draft-button")
                 .click(function () {

                     save('Draft','');

                 });

                $("#submit-button")
                    .click(function () {
                        save('Pending Approval','1');

                    });

                $("#approve-button")
                   .click(function () {
                       var strLevel = $("#ApprovalLevel").val();
                        var nextLevel = "";
                       if (strLevel === "1") {
                           nextLevel = '1';
                       }
                       else if (strLevel === "2") {
                           nextLevel = '2';
                       }
                       else if (strLevel === "3") {
                           nextLevel = '3';
                       }
                       $("#TimesheetStatus").val("Approved");
                       $("#ApprovalLevel").val(nextLevel);
                       $('form').prop('action', '/HRTimesheet/UpdateApproval');
                       $("form").submit();

                   });

                $("#reject-button")
                 .click(function () {
                     var strLevel = $("#ApprovalLevel").val();
                     $("#TimesheetStatus").val("Rejected");
                     $("#ApprovalLevel").val(strLevel);
                     $('form').prop('action', '/HRTimesheet/UpdateApproval');
                     $("form").submit();

                 });

            });


        function OnSelectProfessionalName(e) {
            var dataItem = this.dataItem(e.item);
            var url = "/HRDataMaster/GetProfessional/" + dataItem.ID;

            $.getJSON(url,
                function(result) {
                    //Project_Unit
                    $('#UserLogin').prop('value', result[0].OfficeEmail);
                    $('#ProjectUnit').prop('value', result[0].Project_Unit);
                    $('#Name').prop('value', result[0].Name);
                    $('#ProfessionalID').prop('value', result[0].ID);
                });
        }

        function OnSelectLocationName(e) {
            var dataItem = this.dataItem(e.item);
            $('#LocationID').prop('value', dataItem.ID);
            $('#LocationName').prop('value', dataItem.Title);
        }


        function onCompleteUpdatePeriod(e) {
            $("#TimesheetDetails_Holidays").data("kendoGrid").dataSource.read();
            $("#TimesheetDetails_Holidays").data("kendoGrid").refresh();

            $("#TimesheetDetails_WorkingDays").data("kendoGrid").dataSource.read();
            $("#TimesheetDetails_WorkingDays").data("kendoGrid").refresh();

            var periodPicker = $("#Period").data("kendoDatePicker");
            var period = periodPicker.value();

            var startPicker = $("#From").data("kendoDatePicker");
            startPicker.min(period);

            var endPicker = $("#To").data("kendoDatePicker");
            endPicker.min(period);
            hideLoading();
            $("#remoteModal").modal('show');
        }

        function onCompleteAddTimesheet(e) {
            $("#TimesheetDetails_WorkingDays").data("kendoGrid").dataSource.read();
            $("#TimesheetDetails_WorkingDays").data("kendoGrid").refresh();
        }

        Date.prototype.addDays = function(days) {
            this.setDate(this.getDate() + parseInt(days));
            return this;
        };

        function startChange() {
            var endPicker = $("#To").data("kendoDatePicker"),
                startDate = this.value();

            if (startDate) {
                startDate = new Date(startDate);
                startDate.setDate(startDate.getDate());
                // var currentDate = new Date();
                // // to add 4 days to current date
                //;
                endPicker.min(startDate);
                endPicker.max(startDate.addDays(30));
            }
        }

        function endChange() {
            var startPicker = $("#From").data("kendoDatePicker"),
                endDate = this.value();

            if (endDate) {
                endDate = new Date(endDate);
                endDate.setDate(endDate.getDate());
                startPicker.max(endDate);
                //startPicker.min(endDate-7);
            }
        }
    </script>
}