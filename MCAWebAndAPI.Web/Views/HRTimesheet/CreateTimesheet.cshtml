@using MCAWebAndAPI.Model.ViewModel.Form.HR
@using MCAWebAndAPI.Model.Common
@model TimesheetVM



    <div class="form-horizontal">

        <fieldset>
            <legend>Timesheet</legend>
            <div class="row">
                <div class="col-sm-6">
                    @using (Ajax.BeginForm("UpdatePeriod", "HRTimesheet", new AjaxOptions
                    {
                        OnComplete = "onCompleteUpdatePeriod",
                          OnBegin = "onBeginForm",
                       OnSuccess = "onSuccessFormEmbed",
                        OnFailure = "onFailureForm"
                    }, new { id = "FormUpdatePeriod" }))
                    {
                        @Html.HiddenFor(m => m.UserLogin)
                        @Html.HiddenFor(m => m.ProfessionalID)
                        @Html.HiddenFor(m => m.UserPermission)
                        @Html.HiddenFor(m => m.Name)
                        @Html.HiddenFor(m => m.TimesheetStatus)
                        @Html.HiddenFor(m => m.ApprovalLevel)
                        <div class="form-group">
                            @Html.Bootstrap().LabelFor(m => m.Period).Class("col-sm-4 control-label")
                            <div class="col-sm-8">
                                @Html.EditorFor(m => m.Period)
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.Bootstrap().LabelFor(m => m.ProfessionalName).Class("col-sm-4 control-label")
                            <div class="col-sm-8">
                                @Html.EditorFor(m => m.ProfessionalName)
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.Bootstrap().LabelFor(m => m.ProjectUnit).Class("col-sm-4 control-label")
                            <div class="col-sm-8">
                                @Html.DisplayFor(m => m.ProjectUnit)
                            </div>
                        </div>
                        <button id="submit-button-update-period" class="btn btn-primary pull-right" type="submit">Set</button>
                    }
                </div>
                <div class="col-sm-6">

                </div>
            </div>
            <br />
            <legend>Holidays and Day-Off</legend>
            <div class="row">
                <div class="col-sm-12">
                    @(Html.Kendo()
                      .Grid<TimesheetDetailVM>()
                      .Name("TimesheetDetails_Holidays")
                      .Columns(columns =>
                      {
                          columns.Bound(p => p.Date).Format("{0:dddd, MMM d, yyyy}");
                          columns.Bound(p => p.Type);
                          columns.Bound(p => p.FullHalf)
                              .ClientFooterTemplate("Total Day: #=sum#")
                              .ClientGroupFooterTemplate("Subtotal Day: #=sum#");
                      })
                      .DataSource(dataSource => dataSource
                          .Ajax()
                          .Aggregates(aggregates =>
                          {
                              aggregates.Add(p => p.FullHalf).Sum();
                          })
                          .Read("GridHolidays_Read", "HRTimesheet")
                          .Group(group => group.Add(p => p.Type))
                      )
                    )
                </div>
            </div>
            <br />
            <legend>Working Days</legend>
            <div class="row">
                <div class="col-sm-12">
                    @(Html.Kendo()
                      .Grid<TimesheetDetailVM>()
                      .Name("TimesheetDetails_WorkingDays")
                      .Columns(columns =>
                      {
                          columns.Bound(p => p.Date).Format("{0:dddd, MMM d, yyyy}");
                          columns.Bound(p => p.Location);
                          columns.Bound(p => p.LocationID).Hidden();
                          columns.Bound(p => p.ID).Hidden();
                          columns.Bound(p => p.EditMode).Hidden();
                          columns.Bound(p => p.FullHalf)
                              .ClientFooterTemplate("Total Day: #=sum#");
                          columns.Bound(p => p.Type).Hidden()
                              .ClientGroupHeaderTemplate("Working Days");
                        
                      })
                        .Events(e =>
                        {

                        })
                      .DataSource(dataSource => dataSource
                          .Ajax()
                          .Read("GridWorkingDays_Read", "HRTimesheet")
                          .Sort(s => s.Add(p => p.Date).Ascending())
                          .Aggregates(aggregates =>
                          {
                              aggregates.Add(p => p.FullHalf).Sum();
                          })
                          .Group(group => group.Add(p => p.Type))
                      )
                    )
                </div>
            </div>
            <br />
            <br />
            <legend>Add Working Day</legend>
            <div class="row">
                <div class="col-sm-6">
                    @using (Ajax.BeginForm("", "HRTimesheet", new AjaxOptions
                    {
                        OnComplete = "onCompleteAddTimesheet"
                    }, new { id = "FormAddTimesheet" }))
                    {
                        <div class="form-group">
                            @Html.HiddenFor(m => m.LocationID)
                            @Html.HiddenFor(m => m.LocationName)
                            @Html.Bootstrap().LabelFor(m => m.From).Class("col-sm-4 control-label")
                            <div class="col-sm-8">
                                @(Html.Kendo().DatePicker()
                                  .Name("From")
                                  .Value(DateTime.Today.AddDays(-7))
                                  .Max(DateTime.Today)
                                  .Events(e => e.Change("startChange"))
                                  .HtmlAttributes(new { @class = "form-control", style = "width: 100%" })
                                )
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.Bootstrap().LabelFor(m => m.To).Class("col-sm-4 control-label")
                            <div class="col-sm-8">
                                @(Html.Kendo().DatePicker()
                                  .Name("To")
                                  .Value(DateTime.Today)
                                  .Min(DateTime.Today.AddDays(-31))
                                  .Max(DateTime.Today)
                                  .Events(e => e.Change("endChange"))
                                  .HtmlAttributes(new { @class = "form-control", style = "width: 100%" })
                                )
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.Bootstrap().LabelFor(m => m.Location).Class("col-sm-4 control-label")
                            <div class="col-sm-8">
                                @Html.EditorFor(m => m.Location)
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.Bootstrap().LabelFor(m => m.IsFullDay).Class("col-sm-4 control-label")
                            <div class="col-sm-8">
                                @Html.EditorFor(m => m.IsFullDay)
                            </div>
                        </div>
                        <div class="col-sm-12">
                            &nbsp;<button id="submit-button-add-timesheet" class="btn btn-primary pull-right" type="submit">Add Working Day</button>
                            &nbsp;<button id="delete-button-all" class="btn btn-primary pull-right" type="submit">Delete All Working Day</button>
                            <button id="delete-button-selected" class="btn btn-primary pull-right" type="submit">Delete Selected Working Day</button>
                        </div>
                          
                            }
                        </div>
                <div class="col-sm-6"></div>
            </div>
        </fieldset>

        <div class="form-actions">
          
                <div class="row">
                    <div class="col-sm-12">
                        <button id="submit-button" class="btn btn-success" type="button">
                            Submit for Approval
                        </button>
                        <button id="draft-button" class="btn btn-primary" type="button">
                            <i class="fa fa-save"></i>
                            Save as Draft
                        </button>
                    </div>
                </div>
           
        </div>

    </div> 



@section scripts{

    <script>
        function save(status,level) {
            //alert('ok');
            $("#TimesheetStatus").val(status);
            $("#ApprovalLevel").val(level);
            $('form').prop('action', '/HRTimesheet/SubmitTimesheet');
            $("form").submit();
        }

        $(document)
            .ready(function() {
                $("#Location_Value").data("kendoDropDownList").value("xxx");

                var professional = $("#ProfessionalName_Value").data("kendoDropDownList");

                var strPermission = $("#UserPermission").val();
                if (strPermission !== "HR") {
                    professional.enable(false);
                }

                $("#draft-button")
                 .click(function () {

                     save('Draft','');

                 });

                $("#submit-button")
                    .click(function () {
                        save('Pending Approval','1');

                    });


                $("#delete-button-all")
                   .click(function () {
                      
                       $('form').prop('action', '/HRTimesheet/DeleteAllTimesheet');
                   });

                $("#delete-button-selected")
                .click(function () {

                    $('form').prop('action', '/HRTimesheet/DeleteSelectedTimesheet');
                });

                $("#submit-button-add-timesheet")
              .click(function () {

                  $('form').prop('action', '/HRTimesheet/AddTimesheet');
              });

            });


        

        function OnSelectProfessionalName(e) {
            var dataItem = this.dataItem(e.item);
            var url = "/HRDataMaster/GetProfessional/" + dataItem.ID;

            $.getJSON(url,
                function(result) {
                    //Project_Unit
                    $('#UserLogin').prop('value', result[0].OfficeEmail);
                    $('#ProjectUnit').prop('value', result[0].Project_Unit);
                    $('#Name').prop('value', result[0].Name);
                    $('#ProfessionalID').prop('value', result[0].ID);
                });
        }

        function OnSelectLocationName(e) {
            var dataItem = this.dataItem(e.item);
            $('#LocationID').prop('value', dataItem.ID);
            $('#LocationName').prop('value', dataItem.Title);
        }


        function onCompleteUpdatePeriod(e) {
            $("#TimesheetDetails_Holidays").data("kendoGrid").dataSource.read();
            $("#TimesheetDetails_Holidays").data("kendoGrid").refresh();

            $("#TimesheetDetails_WorkingDays").data("kendoGrid").dataSource.read();
            $("#TimesheetDetails_WorkingDays").data("kendoGrid").refresh();

            var periodPicker = $("#Period").data("kendoDatePicker");
            var period = periodPicker.value();

            var startPicker = $("#From").data("kendoDatePicker");
            startPicker.min(period);

            var endPicker = $("#To").data("kendoDatePicker");
            endPicker.min(period);
            hideLoading();
            $("#remoteModal").modal('show');
        }

        function onCompleteAddTimesheet(e) {
            $("#TimesheetDetails_WorkingDays").data("kendoGrid").dataSource.read();
            $("#TimesheetDetails_WorkingDays").data("kendoGrid").refresh();
        }

        Date.prototype.addDays = function(days) {
            this.setDate(this.getDate() + parseInt(days));
            return this;
        };

        function startChange() {
            var endPicker = $("#To").data("kendoDatePicker"),
                startDate = this.value();

            if (startDate) {
                startDate = new Date(startDate);
                startDate.setDate(startDate.getDate());
                // var currentDate = new Date();
                // // to add 4 days to current date
                //;
                endPicker.min(startDate);
                endPicker.max(startDate.addDays(30));
            }
        }

        function endChange() {
            var startPicker = $("#From").data("kendoDatePicker"),
                endDate = this.value();

            if (endDate) {
                endDate = new Date(endDate);
                endDate.setDate(endDate.getDate());
                startPicker.max(endDate);
                //startPicker.min(endDate-7);
            }
        }
    </script>
}