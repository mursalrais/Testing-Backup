@using MCAWebAndAPI.Model.ViewModel.Form.HR
@model IEnumerable<WorkingRelationshipDetailVM>

@{ 
    var index = 0;
}

<div class="col-md-12" style="margin-bottom: 20px">
    @(Html.Kendo().Grid(Model)
        .Name("WorkingRelationshipDetails")
        .ToolBar(tools => tools.Create().Text("Add New"))
        .Editable(editable => editable.Mode(GridEditMode.InCell)
        .CreateAt(GridInsertRowPosition.Bottom))
        .Columns(columns =>
        {
            columns.Bound(p => p.PositionWorking).ClientTemplate("#= PositionWorking.Text #" +
                          "<input type='hidden' name='WorkingRelationshipDetails[#= getWorkingRelationshipDetails(data)#].PositionWorking.Value' value='#= PositionWorking.Value #' />"
                        ).EditorViewData(new
                        {
                            DataTextField = "Text",
                            DataValueField = "Value",
                            ControllerName = "HRDataMaster",
                            ActionName = "GetPositionsGrid"
                        });
            columns.Bound(p => p.Relationship).ClientTemplate("#= getMultiValue(Relationship) #" +
                               "<input type='hidden' name='WorkingRelationshipDetails[#= getWorkingRelationshipDetails(data)#].Relationship.Text' value='#= getMultiValue(Relationship) #' />"
                             ).EditorViewData(new
                             {
                                 BindTo = WorkingRelationshipDetailVM.GetRelationshipOptions(),
                                 Values = WorkingRelationshipDetailVM.GetRelationshipValues()

                             });

            columns.Bound(p => p.Frequency).ClientTemplate("#= getMultiValue(Frequency) #" +
                               "<input type='hidden' name='WorkingRelationshipDetails[#= getWorkingRelationshipDetails(data)#].Frequency.Text' value='#=getMultiValue(Frequency) #' />"
                             ).EditorViewData(new
                             {
                                 BindTo = WorkingRelationshipDetailVM.GetFrequencyOptions(),
                                 Values = WorkingRelationshipDetailVM.GetFrequencyValues()

                             });
            columns.Bound(p => p.ID).Hidden().ClientTemplate("#= ID #" +
          "<input type='hidden' name=WorkingRelationshipDetails[#= getWorkingRelationshipDetails(data)#].ID value=#= ID # />"


        );
            columns.Bound(p => p.EditMode).Width(100)
         .ClientTemplate("<button id='WorkingRelationshipDetails[#= getWorkingRelationshipDetails(data)#].DeleteButton'" +
         "class='btn btn-danger' type='button'" +
         "onclick='onDeleteKendoDetail(event)'>Delete</button>" +
         "<input type='hidden' name='WorkingRelationshipDetails[#= getWorkingRelationshipDetails(data)#].EditMode' value='#= EditMode #'/>");

        })
        .DataSource(dataSource => dataSource.Ajax()
                   .Model(model =>
                   {
                       model.Id(p => p.ID);
                       model.Field(m => m.PositionWorking).DefaultValue(WorkingRelationshipDetailVM.GetPositionDefaultValue());
                       model.Field(m => m.Relationship).DefaultValue(WorkingRelationshipDetailVM.GetRelationshipDefaultValue());
                       model.Field(m => m.Frequency).DefaultValue(WorkingRelationshipDetailVM.GetFrequencyDefaultValue());
                   })
                   .ServerOperation(false)
        )
    )
</div>

<script>
    function getWorkingRelationshipDetails(dataItem) {
        var data = $("#WorkingRelationshipDetails").data("kendoGrid").dataSource.data();
       
        return data.indexOf(dataItem);
    }
    function getMultiValue(dataItem) {
        var item = [];
        if (dataItem.Text != null) {
            var _temp = dataItem.Text.split(',');
            item = _temp;
        }
        
        for (var i = 0; i < dataItem.length; i++) {
            item.push(dataItem[i].Text);
        }
        return item;
    }
    $
</script>
