@using MCAWebAndAPI.Model.ViewModel.Form.Finance

@model IEnumerable<SCAReimbursementItemVM>

@*
    Wireframe FIN08: SCA Reimbursement
*@

<div class="col-xs-12">
    @(Html.Kendo().Grid(Model)
    .Name("ItemDetails")
    .Editable(editable => editable.Mode(GridEditMode.InCell)
    .CreateAt(GridInsertRowPosition.Top))
    .ToolBar(tools => tools.Create().Text("Add New Item"))
    .Scrollable()
    .Columns(columns =>
    {

        columns.Bound(p => p.ReceiptDate).ClientTemplate("#= kendo.toString(ReceiptDate, 'MM-dd-yyyy') #" +
             "<input type='hidden' name='ItemDetails[#= getItem(data)#].ReceiptDate' value='#= ReceiptDate #' />");

        columns.Bound(p => p.ReceiptNo).ClientTemplate("#= ReceiptNo #" +
            "<input type='hidden' name='ItemDetails[#= getItem(data)#].ReceiptNo' value='#= ReceiptNo #' />");

        columns.Bound(p => p.Payee).ClientTemplate("#= Payee #" +
            "<input type='hidden' name='ItemDetails[#= getItem(data)#].Payee' value='#= Payee #' />");

        columns.Bound(p => p.DescriptionOfExpense).HeaderHtmlAttributes(
    new { style = "white-space: normal" }).ClientTemplate("#= DescriptionOfExpense #" +
            "<input type='hidden' name='ItemDetails[#= getItem(data)#].DescriptionOfExpense' value='#= DescriptionOfExpense #' />");

        columns.Bound(p => p.WBS).ClientTemplate("#= WBS.Text #" +
            "<input type='hidden' name='ItemDetails[#= getItem(data)#].WBS.Value' value='#= WBS.Value #' />" +
            "<input type='hidden' name='ItemDetails[#= getItem(data)#].WBS.Text' value='#= WBS.Text #' />")
            .EditorViewData(new
            {
                DataTextField = "Text",
                DataValueField = "Value",
                ControllerName = "COMWBS",
                ActionName = "GetAllByActivityAsJsonResult"
            })
            .Width(150);

        columns.Bound(p => p.GL).ClientTemplate("#= GL.Text #" +
            "<input type='hidden' name='ItemDetails[#= getItem(data)#].GL.Value' value='#= GL.Value #' />" +
            "<input type='hidden' name='ItemDetails[#= getItem(data)#].GL.Text' value='#= GL.Text #' />")
            .EditorViewData(new
            {
                DataTextField = "Text",
                DataValueField = "Value",
                ControllerName = "ComboBox",
                ActionName = "GetGLMasters",

            });

        columns.Bound(p => p.Amount).ClientTemplate("#= Amount #" +
           "<input type='hidden' name='ItemDetails[#= getItem(data)#].Amount' value='#= calculateField(data).Amount #' />").Width(170);

        columns.Command(command => command.Custom("Delete").HtmlAttributes(new { @class = "btn btn-danger deleteRow" })
           .Click("onDeleteKendoDetail")).Width(100);

        columns.Bound(p => p.ID).Hidden().ClientTemplate("#= ID #" +
              "<input type='hidden' name='ItemDetails[#= getItem(data)#].ID' value='#= ID #' />");

        columns.Bound(p => p.EditMode).Hidden().ClientTemplate("#= EditMode #" +
            "<input type='hidden' name='ItemDetails[#= getItem(data)#].EditMode' value='#= EditMode #' />"
        );

    })
    .Events(e =>
    {
        e.DataBound("onDataBoundItemDetails");
        e.Edit("onedit");
    })
    .DataSource(dataSource => dataSource.Ajax()
    .Model(model =>
    {
        model.Id(p => p.ID);
        model.Field(m => m.WBS).DefaultValue(EventBudgetItemVM.GetWBSDefaultValue());
        model.Field(m => m.GL).DefaultValue(EventBudgetItemVM.GetGLDefaultValue());
    })
    .ServerOperation(false)
    )
    )
</div>

<script>

    function getItem(dataItem) {
        var data = $("#ItemDetails").data("kendoGrid").dataSource.data();
        return data.indexOf(dataItem);
    }

    function onDataBoundItemDetails(e) {
        var grid = $("#ItemDetails").data("kendoGrid");
        hideDeletedRowKendoDetail(grid);
        calculateTotal();
    }

    function calculateTotal() {
        var datasource = $("#ItemDetails").data("kendoGrid").dataSource.data();
        var totalAll = 0;

        for (var i = 0; i < datasource.length; i++) {
            if (datasource[i].EditMode >= 0) {
                totalAll = totalAll + datasource[i].Amount;
            }
        }

        var totalCtrl = $('#Amount').data("kendoNumericTextBox");
        totalCtrl.value(totalAll);
    }

    function calculateField(data) {
        calculateTotal();
        return data;
    }

    function onedit(e) {
        onEditKendoDetail(e);
    }

</script>
