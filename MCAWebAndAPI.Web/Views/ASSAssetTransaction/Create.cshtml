@using MCAWebAndAPI.Model.ViewModel.Form.Asset

@model AssetTransactionVM

@using (Ajax.BeginForm("Create", "ASSAssetTransaction",
                FormMethod.Post,
                new AjaxOptions
                {
                    OnSuccess = "onSuccess",
                    OnFailure = "onFailure"
                }))
{<fieldset>
        <legend>Form Asset Transfer</legend>
        @Html.AntiForgeryToken()
        @Html.ValidationSummary()

        <div class="col-md-6">
            <div class="form-group">
                @Html.Bootstrap().LabelFor(m => m.Header.TransactionType).Class("col-md-4 control-label")
                <div class="col-md-8">
                    @Html.DisplayFor(m => m.Header.TransactionType)
                </div>
            </div>
            <div class="form-group">
                @Html.Bootstrap().LabelFor(m => m.Header.AssetHolderFrom).Class("col-md-4 control-label")
                <div class="col-md-8">
                    @Html.EditorFor(m => m.Header.AssetHolderFrom)
                </div>
            </div>
            <div class="form-group">
                @Html.Bootstrap().LabelFor(m => m.Header.ContactNoFrom).Class("col-md-4 control-label")
                <div class="col-md-8">
                    @Html.DisplayFor(m => m.Header.ContactNoFrom)
                </div>
            </div>
            <div class="form-group">
                @Html.Bootstrap().LabelFor(m => m.Header.ProjectUnitFrom).Class("col-md-4 control-label")
                <div class="col-md-8">
                    @Html.DisplayFor(m => m.Header.ProjectUnitFrom)
                </div>
            </div>
        </div>

        <div class="col-md-6">
            <div class="form-group">
                @Html.Bootstrap().LabelFor(m => m.Header.Date).Class("col-md-4 control-label")
                <div class="col-md-8">
                    @Html.EditorFor(m => m.Header.Date)
                </div>
            </div>  
            <div class="form-group">
                @Html.Bootstrap().LabelFor(m => m.Header.AssetHolderTo).Class("col-md-4 control-label")
                <div class="col-md-8">
                    @Html.EditorFor(m => m.Header.AssetHolderTo)
                </div>
            </div>
            <div class="form-group">
                @Html.Bootstrap().LabelFor(m => m.Header.ContactNoTo).Class("col-md-4 control-label")
                <div class="col-md-8">
                    @Html.DisplayFor(m => m.Header.ContactNoTo)
                </div>
            </div>
            <div class="form-group">
                @Html.Bootstrap().LabelFor(m => m.Header.ProjectUnitTo).Class("col-md-4 control-label")
                <div class="col-md-8">
                    @Html.DisplayFor(m => m.Header.ProjectUnitTo)
                </div>
            </div>
        </div>
     @Html.Bootstrap().SubmitButton().Text("Submit")

    </fieldset>
}

<div class="col-md-12">
    @(Html.Kendo().Grid(Model.Items)
            .Name("GridItem")
            .Pageable()
            .Sortable()
            .Scrollable()
            .ToolBar(toolbar =>
            {
                toolbar.Create();
                toolbar.Save();
            })
            .Editable(editable => editable.Mode(GridEditMode.InCell))
            .Columns(columns =>
            {
                columns.Bound(p => p.Asset);
                columns.Bound(p => p.LocationFrom);
                columns.Bound(p => p.LocationTo).Width(120);
                columns.Bound(p => p.CostIDR).Width(120);
                columns.Bound(p => p.CostUSD).Width(120);
                columns.Bound(p => p.ReturnDate);
                columns.Bound(p => p.Remarks);
                columns.Bound(p => p.Header_ID).Hidden();
            })
            .DataSource(dataSource => dataSource
                .Ajax()
                .Batch(true)
                .ServerOperation(false)
                .PageSize(20)
                .Create(update => update.Action("CreateItem", "ASSAssetTransaction"))
                .Update(update => update.Action("UpdateItem", "ASSAssetTransaction"))
                .Destroy(update => update.Action("DeleteItem", "ASSAssetTransaction"))
                .Model(model =>
                {
                    model.Id(p => p.ID);
                    model.Field(p => p.Header_ID).Editable(false);
                })
            )
    )
</div>

@section scripts{
    <script type="text/javascript">

        function onSuccess() {

        }

        function onFailure() {

        }

        $(document).ready(function () {

            $('#Header_AssetHolderFrom_Value').data('kendoDropDownList').select(function (e) {
                var dataItem = this.dataItem(e.item);
                $('#Header_ContactNoFrom').text(dataItem.text);
            });
        });

    </script>
}