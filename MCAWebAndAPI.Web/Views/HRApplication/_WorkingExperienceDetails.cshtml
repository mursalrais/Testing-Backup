@using MCAWebAndAPI.Model.ViewModel.Form.HR
@model ApplicationDataVM

<div class="col-sm-12" style="margin-bottom: 20px">
    @(Html.Kendo().Grid(Model.WorkingExperienceDetails)
        .Name("WorkingExperienceDetails")
        .ToolBar(tools => tools.Create().Text("Add New Working Experience"))
        .Editable(editable => editable.Mode(GridEditMode.InCell).CreateAt(GridInsertRowPosition.Bottom))
        .Columns(columns =>
        {
            columns.Bound(p => p.Position).ClientTemplate("#= Position #" +
                          "<input type='hidden' name='WorkingExperienceDetails[#= getWorkingExperienceDetail(data)#].Position' value='#= Position #' />"
                        ).Width(300);
            columns.Bound(p => p.StrPosition).Hidden().ClientTemplate("#= StrPosition #" +
                          "<input type='hidden' name='WorkingExperienceDetails[#= getWorkingExperienceDetail(data)#].StrPosition' value='#= StrPosition #' />"
                        ).Width(300);
            columns.Bound(p => p.Company).ClientTemplate("#= Company #" +
                               "<input type='hidden' name='WorkingExperienceDetails[#= getWorkingExperienceDetail(data)#].Company' value='#= Company #' />"
                             ).Width(400);
            columns.Bound(p => p.From).ClientTemplate("#=getMonthName(From)#" + " " +  "#= From.getFullYear() #" +
                               "<input type='hidden' name='WorkingExperienceDetails[#= getWorkingExperienceDetail(data)#].From' value='#= From #' />"
                             ).Width(150);
            columns.Bound(p => p.StrFrom).Hidden().ClientTemplate("#= StrFrom #" +
                          "<input type='hidden' name='WorkingExperienceDetails[#= getWorkingExperienceDetail(data)#].StrFrom' value='#= StrFrom #' />"
                        ).Width(150);
            columns.Bound(p => p.To).ClientTemplate("#=getMonthName(To)#" + " " + "#= To.getFullYear() #" +
                               "<input type='hidden' name='WorkingExperienceDetails[#= getWorkingExperienceDetail(data)#].To' value='#= To #' />"
                             ).Width(150);
            columns.Bound(p => p.StrTo).Hidden().ClientTemplate("#= StrTo #" +
                          "<input type='hidden' name='WorkingExperienceDetails[#= getWorkingExperienceDetail(data)#].StrTo' value='#= StrTo #' />"
                        ).Width(150);
            columns.Bound(p => p.Remarks).ClientTemplate("#= Remarks #" +
                            "<input type='hidden' name='WorkingExperienceDetails[#= getWorkingExperienceDetail(data)#].Remarks' value='#= Remarks #' />"
                          );

            columns.Bound(p => p.ID).Hidden().ClientTemplate("#= ID #" +
              "<input type='hidden' name='WorkingExperienceDetails[#= getWorkingExperienceDetail(data)#].ID' value='#= ID #' />"
            );

            columns.Bound(p => p.EditMode).Hidden().ClientTemplate("#= EditMode #" +
            "<input type='hidden' name='WorkingExperienceDetails[#= getWorkingExperienceDetail(data)#].EditMode' value='#= EditMode #' />"
          );

            columns.Command(command => command.Custom("Delete").HtmlAttributes(new { @class = "btn btn-danger" })
                .Click("onDeleteKendoDetail")).Width(100);

        })
        .Events(e =>
        {
            e.Edit("onEditKendoDetail");
            e.DataBound("onDataBoundWorkingExperienceDetails");

        })
        .DataSource(dataSource => dataSource.Ajax()
                   .Model(model =>
                   {
                       model.Id(p => p.ID);
                       model.Field(e => e.From).DefaultValue(DateTime.Now.AddYears(-5));
                       model.Field(e => e.To).DefaultValue(DateTime.Now);
                   })
                   .ServerOperation(false)
        )
    )
</div>
<div class="col-sm-6">
    <div class="form-group">
        @Html.Bootstrap().LabelFor(m => m.YearRelevanWork).Class("col-sm-4 control-label")
        <div class="col-sm-8">
            @Html.Kendo().TextBoxFor(model => model.YearRelevanWork).HtmlAttributes(new { @class = "form-control", style = "width:100%;" })
        </div>
    </div>
</div>
<div class="col-sm-6">
    <div class="form-group">
        @Html.Bootstrap().LabelFor(m => m.MonthRelevantWork).Class("col-sm-4 control-label")
        <div class="col-sm-8">
            @Html.Kendo().TextBoxFor(model => model.MonthRelevantWork).HtmlAttributes(new { @class = "form-control", style = "width:100%;" })
        </div>
    </div>
</div>


<script>
    function getWorkingExperienceDetail(dataItem) {
        var data = $("#WorkingExperienceDetails").data("kendoGrid").dataSource.data();
        return data.indexOf(dataItem);
    }

    function onDataBoundWorkingExperienceDetails(e) {
        var grid = $("#WorkingExperienceDetails").data("kendoGrid");
        hideDeletedRowKendoDetail(grid);
    }
</script>

