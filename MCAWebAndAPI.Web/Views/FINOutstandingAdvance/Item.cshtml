@using MCAWebAndAPI.Model.ViewModel.Form.Finance
@model MCAWebAndAPI.Model.ViewModel.Form.Finance.OutstandingAdvanceVM

@*
    Wireframe FIN09: Outstanding Advance
*@

@{
    ViewBag.Title = "Outstanding Advance";
}

@using (Html.BeginForm("Save", "FINOutstandingAdvance",
                FormMethod.Post,
                new
                {
                    @id = "formOA",
                    @class = "form-horizontal",
                    enctype = "multipart/form-data"
                }))
{
    <fieldset>
        <legend>Outstanding Advance</legend>
        <div class="row">
            <div class="col-sm-6">
                @Html.HiddenFor(m => m.ID)
                @Html.HiddenFor(m => m.Operation)
            </div>
        </div>
        <div class="row">
            <div class="col-sm-6">
                <div class="form-group">
                    @Html.Bootstrap().LabelFor(m => m.DateOfUpload).Class("col-sm-3 control-label")
                    <div class="col-sm-8">
                        @Html.EditorFor(m => m.DateOfUpload)
                    </div>
                </div>
                <div class="form-group">
                    @Html.Bootstrap().LabelFor(m => m.Staff).Class("col-sm-3 control-label")
                    <div class="col-sm-8">
                        @Html.EditorFor(m => m.Staff)
                        @Html.Hidden("StaffDescription")
                        <span id="txtStaffRole" class="custom-validation"></span>
                    </div>
                </div>
                <div class="form-group">
                    @Html.Bootstrap().LabelFor(m => m.Reference).Class("col-sm-3 control-label")
                    <div class="col-sm-8">
                        @Html.EditorFor(m => m.Reference)
                    </div>
                </div>
                <div class="form-group">
                    @Html.Bootstrap().LabelFor(m => m.DueDate).Class("col-sm-3 control-label")
                    <div class="col-sm-8">
                        @Html.EditorFor(m => m.DueDate)
                    </div>
                </div>

                <div class="form-group">
                    @Html.Bootstrap().LabelFor(m => m.Currency).Class("col-sm-3 control-label")
                    <div class="col-sm-8">
                        @Html.EditorFor(m => m.Currency)
                    </div>
                </div>

                <div class="form-group">
                    @Html.Bootstrap().LabelFor(m => m.Amount).Class("col-sm-3 control-label")
                    <div class="col-sm-8">
                        @Html.EditorFor(m => m.Amount)
                    </div>
                </div>

                <div class="form-group">
                    @Html.Bootstrap().LabelFor(m => m.Project).Class("col-sm-3 control-label")
                    <div class="col-sm-8">
                        @Html.EditorFor(m => m.Project)
                    </div>
                </div>

                <div class="form-group">
                    @Html.Bootstrap().LabelFor(m => m.Remarks).Class("col-sm-3 control-label")
                    <div class="col-sm-8">
                        @Html.EditorFor(m => m.Remarks)
                    </div>
                </div>

                <div class="form-group">
                    @Html.Bootstrap().LabelFor(m => m.Documents).Class("col-sm-3 control-label")
                    <div class="col-sm-8">
                        @Html.EditorFor(m => m.Documents)
                    </div>
                </div>

                @if (!string.IsNullOrWhiteSpace(Model.DocumentUrl))
                {
                    <div class="form-group">
                        <div class="form-group">
                            @Html.Bootstrap().LabelFor(m => m).Class("col-sm-3 control-label")
                            <div class="col-sm-8">
                                <button id="application-document-button" class="btn btn-default" type="button">
                                    Click Here to go to Outstanding Advance Documents
                                </button>
                            </div>
                        </div>
                        <script>
                            $('#application-document-button').click(function () {
                                parent.postMessage({
                                    result: "Success", urlToRedirect: "@Model.DocumentUrl"
                                }, "@Model.DocumentUrl");
                            });
                        </script>
                    </div>
                }
            </div>
        </div>
    </fieldset>

    switch (Model.Operation)
    {
        case Shared.Operations.c:
        case Shared.Operations.e:
            <div class="form-actions">
                <div class="row">
                    <div class="col-sm-12">
                        <button id="submit-button" class="btn btn-primary" type="submit">
                            <i class="fa fa-save"></i>
                            Submit
                        </button>
                        <a href="@ViewBag.CancelUrl" target='_parent'>
                            <input class="k-button k-button-icontext k-grid-add" size="4" value="Cancel" />
                        </a>
                    </div>
                </div>
            </div>

            break;

        case Shared.Operations.v:
            <div class="form-actions">
                <div class="row">
                    <div class="col-sm-12">
                        <a href="@ViewBag.CancelUrl" target='_parent'>
                            <input class="k-button k-button-icontext k-grid-add" size="4" value="Close" />
                        </a>
                    </div>
                </div>
            </div>

            break;

    }
}

@section scripts{
    <script>
        $(document).ready(function () {

            $("#formOA").on('submit', function () {
                if ($("#Staff_Value").val() == -1) {
                    $("#txtStaffRole").html("The Staff field is required.");
                    return false;
                } else {
                    var firstIDStaff = $("#StaffDescription").val().charAt(0);
                    var currency = $("#Currency_Value").val();
                    var idr = "IDR";
                    var usd = "USD";
                    if ((firstIDStaff == 1 || firstIDStaff == 5) && currency != idr) {
                        alert("The currency for Professional & IC must be in IDR.");
                        return false;
                    } else if (firstIDStaff == 4 && currency != usd) {
                        alert("The currency for Grantee must be in USD.");
                        return false;
                    }
                }
                return true;
            });

            $("#DateOfUpload").kendoDatePicker({
                format: "MM/dd/yyyy"
            });
        });

        function OnSelectStaff(e) {
            var data = this.dataItem(e.item);
            $("#StaffDescription").val(data.Text)
            $("#txtStaffRole").html("");
        }
    </script>
}

<style>
    .custom-validation {
        color: #b94a48;
        font-size: 85%;
        display: block;
        margin-top: 6px;
    }
</style>

<style media="screen">
    .k-button-icontext {
        height: 35px;
        margin-left: 5px;
    }
</style>