@using MCAWebAndAPI.Model.ViewModel.Form.Common
@using MCAWebAndAPI.Model.ViewModel.Control

@model WorkflowRouterVM

<div class="col-sm-12">
    @(Html.Kendo().Grid<WorkflowItemVM>()
        .Name("WorkflowDetails")
        .Editable(editable => editable.Mode(GridEditMode.InLine))
        .Columns(columns =>
        {
            columns.Bound(p => p.ID).Hidden();
            columns.Bound(p => p.Level).Width(150);
            columns.Bound(p => p.ApproverUnitText).ClientTemplate("#= ApproverUnitText #").Width(200);
            columns.Bound(p => p.ApproverPositionText).ClientTemplate("#= ApproverPositionText #").Width(200);
            columns.Bound(p => p.ApproverName).Width(400).ClientTemplate("#= ApproverUserName.Text #")
            .EditorViewData(
            new
            {
                DataTextField = "Name",
                DataValueField = "ID",
                ActionName = "GetApproverUser",
                ControllerName = "Workflow",
            });
            columns.Command(p => p.Edit().Text("Edit").HtmlAttributes(new { @title = "Edit" })).Width(220);
        })
        .DataSource(
            dataSource =>
            dataSource.Ajax().Model(model =>
            {
                model.Id(p => p.ID);
                model.Field(m => m.ApproverName).DefaultValue(AjaxComboBoxVM.GetDefaultValue());
                model.Field(p => p.Level).Editable(false);
            })
        .Read(read => read.Action("Grid_Read", "Workflow").Type(HttpVerbs.Post))
        .Update(update => update.Action("Grid_Update", "Workflow").Type(HttpVerbs.Post))
        )
    //.DataSource(datasource => datasource.Ajax().Events(events =>
    //{
    //    events.Change("onChange");
    //})
    //)
    )
</div>

@*<script>
    function onChange(e) {
        var overallTotalScore = 0;
        var recordsOnCurrentView = 0;
        if (e.action === "itemchange") {
            if (e.field === "ApproverName") {
                var model = e.items[0];
                var urlPSA = "/HRPSAManagement/GetPSA/" + model.ApproverName.DataValueField;
                console.log(urlPSA);
                //$.getJSON(url, function (result) {
                //    $('#ProfessionalID').prop('value', result[0].ID);
                //    $('#Status').prop('value', result[0].Status);
                //    $.getJSON(urlPSA, function (result) {
                //var TotalScore = (model.ActualWeight / 100) * model.Score;
                //model.set('TotalScore', (TotalScore));
            }
        }
    }

</script>*@