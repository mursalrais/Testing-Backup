@using MCAWebAndAPI.Model.ViewModel.Form.Finance
@model PettyCashJournalVM

@*
    Wireframe FIN13: Petty Cash Journal
*@

@{
    ViewBag.Title = "Petty Cash Journal";

}

@using (Html.BeginForm("Save", "FINPettyCashJournal",FormMethod.Post,
new
{
    @id= "FINPettyCashJournalForm",
    @class = "form-horizontal",
    enctype = "multipart/form-data"
}))
{
    <fieldset>
        <legend>@ViewBag.Title</legend>
        <div class="col-sm-12">
            @Html.HiddenFor(m => m.ID)
            @Html.HiddenFor(m => m.Operation)
            @Html.HiddenFor(m => m.ItemEdited)
        </div>
        <br/>
        <div class="col-sm-4">
            <div class="form-group">
                @Html.Bootstrap().LabelFor(m => m.DateFrom).Class("col-sm-4 control-label")
                <div class="col-sm-8">
                    @Html.EditorFor(m => m.DateFromPicker)
                    <!-- need to set as dd/MM/yyyy if not in controller cant get value -->
                    @Html.TextBoxFor(model => model.DateFrom, "{0:dd/MM/yyyy HH:mm}", htmlAttributes: new { @type = "hidden" })

                </div>
            </div>
        </div>

        <div class="col-sm-4">
            <div class="form-group">
                @Html.Bootstrap().LabelFor(m => m.DateTo).Class("col-sm-4 control-label")
                <div class="col-sm-8">
                    @Html.EditorFor(m => m.DateToPicker)
                    <!-- need to set as dd/MM/yyyy if not in controller cant get value -->
                    @Html.TextBoxFor(model => model.DateTo, "{0:dd/MM/yyyy HH:mm}", htmlAttributes: new { @type = "hidden" })
                    
                </div>
            </div>
        </div>

        <div class="col-sm-4" >
            <div class="form-group">
                <div class="col-sm-8">
                    <button id="view-button" class="btn btn-default" type="button">View Journal</button>
                </div>
            </div>
        </div>
        
        <legend style="margin-top: 75px;">Petty Cash Transactions</legend>
            <div class="row">
                <div class="col-sm-12">
                    @Html.Partial("_ItemDetails", Model.ItemDetails)
                </div>
            </div>

            <div class="col-sm-12">
                <div class="form-group">
                    @Html.Bootstrap().LabelFor(m => m.TotalAmount).Class("col-xs-9 control-label")
                    <div class="col-xs-3">
                        @Html.EditorFor(m => m.TotalAmount)
                    </div>
                </div>

                <div class="form-group">
                    @Html.Bootstrap().LabelFor(m => m.Advances1).Class("col-xs-9 control-label")
                    <div class="col-xs-3">
                        @Html.EditorFor(m => m.Advances1, new { @Value = "0" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Bootstrap().LabelFor(m => m.Advances2).Class("col-xs-9 control-label")
                    <div class="col-xs-3">
                        @Html.EditorFor(m => m.Advances2, new { @Value = "0" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Bootstrap().LabelFor(m => m.Advances3).Class("col-xs-9 control-label")
                    <div class="col-xs-3">
                        @Html.EditorFor(m => m.Advances3, new { @Value = "0" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Bootstrap().LabelFor(m => m.CashOnHand).Class("col-xs-9 control-label")
                    <div class="col-xs-3">
                        @Html.EditorFor(m => m.CashOnHand)
                    </div>
                </div>

                <div class="form-group">
                    @Html.Bootstrap().LabelFor(m => m.TotalPettyCashFund).Class("col-xs-9 control-label")
                    <div class="col-xs-3">
                        @Html.EditorFor(m => m.TotalPettyCashFund)
                    </div>
                </div>
            </div>

    </fieldset>
    <div class="form-actions">
        <div class="row">
            <div class="col-sm-12">
                @if (Model.ID > 0)
                {
                    <button id="print-button" class="btn btn-default" type="button">
                        Print
                    </button>
                }
                &nbsp;
                <button id="submit-button" class="btn btn-primary" type="submit">
                    <i class="fa fa-save"></i>
                    Submit
                </button>
                <a href="@ViewBag.CancelUrl" target='_parent'>
                    <input class="k-button k-button-icontext k-grid-add" size="4" value="Cancel" />
                </a>
            </div>
        </div>
    </div>
}

<script>

    $(document).ready(function () {
        $(".k-numerictextbox").css("width", "100%");
        $("#TotalAmount").data("kendoNumericTextBox").readonly();
        $("#TotalPettyCashFund").data("kendoNumericTextBox").readonly();
        $("#CashOnHand").data("kendoNumericTextBox").readonly();

        $("#view-button").on('click', function () {
            if ($("#DateFrom").val() > $("#DateTo").val()) {
                alert("Date (to) cannot be less than Date (from)");
            } else {
                $("#ItemEdited").val(true);
                $("#ItemDetails").data("kendoGrid").dataSource.read();
            }

            calcCashOnHand();
        });

        $("#FINPettyCashJournalForm,#print-button").on('submit', function () {
            var grid = $("#ItemDetails").data("kendoGrid");
            var dataSource = grid.dataSource;
            var recordsOnCurrentView = dataSource.view().length;
            var totalRecords = dataSource.total();

            if (totalRecords <= 0) {
                alert("Petty Cash Transactions is required.");
                return false;
            }

            if ($("#AdvancesForOperationalCar1").val() == '') {
                $("#AdvancesForOperationalCar1").data("kendoNumericTextBox").value(0);
            }
            if ($("#AdvancesForOperationalCar2").val() == '') {
                $("#AdvancesForOperationalCar2").data("kendoNumericTextBox").value(0);
            }
            if ($("#AdvancesForOperationalCar3").val() == '') {
                $("#AdvancesForOperationalCar3").data("kendoNumericTextBox").value(0);
            }
            
            return true;
        });

        $('#print-button').click(function (e) {
            if (!$('form').valid()) {
                alert('Please make sure that all required fields are filled');
                return;
            }
            e.preventDefault();
            var actionUrl = $('form').attr("action");
            var newActionUrl = actionUrl.replace("Save", "Print");

            $('form').prop('action', newActionUrl);
            $('form').submit();
            
        });

        calcCashOnHand();

        function onChange() {
            $("#DateFrom").val(convert(this.value()));
            
        }

        $("#DateFromPicker").kendoDateTimePicker({
            change: onChange,
            format: "MM/dd/yyyy HH:mm"
        });

        function onChangeTo() {
            $("#DateTo").val(convert(this.value()));

        }

        $("#DateToPicker").kendoDateTimePicker({
            change: onChangeTo,
            format: "MM/dd/yyyy HH:mm"
        });
    });

    $('#Advances1').keyup(calcCashOnHand);
    $('#Advances2').keyup(calcCashOnHand);
    $('#Advances3').keyup(calcCashOnHand);

    function calcCashOnHand() {
        var totalAmount = $('#TotalAmount').val();
        var advances1 = $('#Advances1').val();
        var advances2 = $('#Advances2').val();
        var advances3 = $('#Advances3').val();
        var totalPettyCashFund = $('#TotalPettyCashFund').val();

        var cashOnHand = totalPettyCashFund - totalAmount - advances1 - advances2 - advances3;

        $("#CashOnHand").data("kendoNumericTextBox").value(cashOnHand);
    }

    function convert(str) {
        var date = new Date(str),
            mnth = ("0" + (date.getMonth() + 1)).slice(-2),
            day = ("0" + date.getDate()).slice(-2);
            hours = ("0" + date.getHours()).slice(-2);
            minutes = ("0" + date.getMinutes()).slice(-2);

            var dateformat = [day,mnth, date.getFullYear()].join("/");
            var timeFormat = [hours, minutes].join(":");
            return dateformat + " " + timeFormat;
    }
</script>

<style>
    .field-validation-error {
        margin-top:7px !important;
    }

    .k-button-icontext {
        height: 35px;
        margin-left: 5px;
    }


</style>