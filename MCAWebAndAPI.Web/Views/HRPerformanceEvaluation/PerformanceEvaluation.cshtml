@using MCAWebAndAPI.Model.ViewModel.Form.HR

@model PerformanceEvaluationVM

@{
    ViewBag.Title = "Form Create Performance Evaluation";
    


}

@using (Html.BeginForm("PerformanceEvaluation", "HRPerformanceEvaluation", FormMethod.Post,
                                                                 new
                                                                 {
                                                                     @class = "form-horizontal",
                                                                     enctype = "multipart/form-data"
                                                                 }))
{
    <fieldset>
        <legend>Performance Plan Evaluation</legend>
        <div class="row">
            @Html.HiddenFor(x=>x.ID)
            @Html.Partial("_PerformancePlanEvaluation", Model)
        </div>
        <div class="form-actions">
            <div class="row">
                <div class="col-md-12">
                    @if (Model.ID == null)
                    {
                        <button id="initiate" class="btn btn-primary" type="submit">
                            <i class="fa fa-save"></i>
                            Initiate Plan Process
                        </button>
                        <button id="close" class="btn btn-primary" type="submit" disabled>
                            <i class="fa fa-save"></i>
                            Close Plan Process
                        </button>
                    }
                    else
                    {
                        <button id="initiate" class="btn btn-primary" type="submit" disabled>
                            <i class="fa fa-save"></i>
                            Initiate Plan Process
                        </button>
                        if (Model.PerformanceEvaluationDetails.All(x => x.PlanIndicator == "green") && (Model.Status == "Open") && (Model.PerformanceEvaluationDetails.All(x => x.PlanStatus == "Approved")))
                        {
                            <button id="close" class="btn btn-primary" type="submit">
                                <i class="fa fa-save"></i>
                                Close Plan Process
                            </button>
                        }
                        else
                        {
                            <button id="close" class="btn btn-primary" type="submit" disabled>
                                <i class="fa fa-save"></i>
                                Close Plan Process
                            </button>
                        }
                    }
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                @Html.Bootstrap().LabelFor(m => m.IntiationDate).Class("col-md-4 control-label")
                <div class="col-md-8">
                    @Html.DisplayFor(m => m.IntiationDate)
                </div>
            </div>
        </div>
        <legend></legend>
        <div class="row">
            @Html.Partial("_Detail", Model.PerformanceEvaluationDetails)
        </div>
    </fieldset>
   
}

    @section scripts{
        <script type="text/javascript">
          
            
            $(document).ready(function () {
                $("#submit-button").click(function () {
                $("form").submit();
            });

        });

       
        function onSuccess(data) {
            window.location.href = data.urlToRedirect;
        }

        function onFailure(data) {
            window.location.href = data.urlToRedirect;
        }
        
        
            function OnSelectAssetHolderFrom(e) {
                var dataItem = this.dataItem(e.item);

                var dateOfNewPSA = $("#DateOfNewPSA").val();

                var url = "/HRPSAManagement/GetRenewal/" + dataItem.ID;

                $.getJSON(url, function (result) {

                    console.log(result);

                    if (result.length != 0) {
                        console.log("Ada Data PSA Sebelumnya")

                        var psaID = result[0].PSAId;

                        var renewalnumber = result[0].PSARenewalNumber + 1;

                        var expirydatebefore = result[0].ExpiryDateBefore
                        var expdate = new Date(expirydatebefore);

                        var dateexpdate = expdate.getDate();
                        var dateexpdateint = parseInt(dateexpdate);

                        var calcexpdate = dateexpdateint + 1;

                        var setexpdate = new Date(expdate.setDate(calcexpdate));
                        var expirydate = setexpdate.getMonth() + 1 + '/' + setexpdate.getDate() + '/' + setexpdate.getFullYear();

                        $('#HidRenewalNumber').prop('value', renewalnumber);
                        $('#ExpiryDateBefore').prop('value', expirydate);
                        $('#PSAId').prop('value', psaID);

                        $("#IsRenewal_Value").data("kendoDropDownList").select(0);
                        $("#IsRenewal_Value").data("kendoDropDownList").readonly();

                        $("#PSARenewalNumber").prop("readonly", "false");
                        $("#PSARenewalNumber").prop("value", renewalnumber);

                        $("#DateOfNewPSA").data("kendoDatePicker").min(expirydate);
                        $("#DateOfNewPSA").prop('value', expirydate);

                        $("#Tenure").prop('value', 0);

                        $("#PSAExpiryDate").prop('value', expirydate);
                    }

                    if (result.length == 0)
                    {
                        $("#IsRenewal_Value").data("kendoDropDownList").select(1);
                        $("#IsRenewal_Value").data("kendoDropDownList").readonly();

                        $("#PSARenewalNumber").prop("readonly", "true");
                        $("#PSARenewalNumber").prop("value", 0);

                        $('#PSAId').prop('value', 0);

                        

                        var joinDate = $("#JoinDate").val();

                        $("#DateOfNewPSA").data("kendoDatePicker").min(joinDate);
                        $("#DateOfNewPSA").prop("value", joinDate);

                        $("#Tenure").prop('value', 0);

                        $("#PSAExpiryDate").prop('value', joinDate);
                    }

                })             
            }

            function OnSelectPosition(e) {
                var dataItem = this.dataItem(e.item);
                var urlKeyPosition = "/HRDataMaster/GetKeyPosition/" + dataItem.ID;
                               
                $.getJSON(urlKeyPosition, function (result) {

                    if (result[0].isKeyPosition == "Yes")
                    {
                        $('#KeyPosition').prop('value', "You must upload file with the file name format: MCC-PSA-MMDDYYYY");
                        $('#DocumentType').prop('value', "MCC No Objection Letter");
                        $('#KeyPositionValue').prop('value', "Yes");
                   
                    }
                    else
                    {
                        $('#KeyPosition').prop('value', "You must upload file with the file name format: PSA-MMDDYYYY");
                        $('#DocumentType').prop('value', "MCC No Objection Letter");
                        $('#KeyPositionValue').prop('value', "No");
                    }
                })

                
            }

            
            $(document).ready(function () {

                $("#Tenure").on('input', function () {
                    sumCal();
                });

                function sumCal() {

                    var dateOfNewPSA = $("#DateOfNewPSA").val();
                    var dateofnewpsa = new Date(dateOfNewPSA);
                    var monthpsa = dateofnewpsa.getMonth();
                    var monthint = parseInt(monthpsa);
                    var datepsa = dateofnewpsa.getDate();

                    var tenure = $("#Tenure").val();
                    var tenureint = parseInt(tenure);
                    var addtenure = tenureint + monthint;

                    var setmonth = new Date(dateofnewpsa.setMonth(addtenure));

                    var psaexpirydate = setmonth.getMonth() + 1 + '/' + setmonth.getDate() + '/' + setmonth.getFullYear();
                    $("#PSAExpiryDate").val(psaexpirydate);
                }

            });

            $(document).ready(function () {

                
                function onChange() {

                    if ($("#IsRenewal_Value").val() == "No")
                    {
                        var joinDate = $("#JoinDate").val();

                        console.log("Join Date: " + joinDate);

                        $('#DateOfNewPSA').prop('value', joinDate);
                        $("#DateOfNewPSA").data("kendoDatePicker").min(joinDate);
                        $("#PSAExpiryDate").val(joinDate);

                    }
                    
                }

                $("#JoinDate").kendoDatePicker(
                { change: onChange }
                );

            });

            
           function isrenewalChanged() {

               
               if ($("#IsRenewal_Value").val() == "Yes")
                {
                    $("#PSARenewalNumber").prop("readonly", "true");
                    var renewalnumber = $("#HidRenewalNumber").val();
                    $('#PSARenewalNumber').prop('value', renewalnumber);
                    var expirydate = $("#ExpiryDateBefore").val();
                    $("#DateOfNewPSA").data("kendoDatePicker").min(expirydate);
                    $('#PSAExpiryDate').prop('value', expirydate);

                    
                 }
           }

           function onSelectPSA(e) {
                 
               $.each(e.files, function (index, value) {
                   console.log("Index Document: " + index);
                   console.log("Name: " + value.name);
                   console.log("Index of MCC: " + value.name.indexOf("MCCNoObjectionLetter"));
                   console.log("Size: " + value.size + " bytes");
                   console.log("Extension: " + value.extension);

                   
                   if ($("#KeyPositionValue").val() == "Yes")
                   {
                       if ((index == 0))
                       {
                           if (value.name.indexOf("MCC") < 0)
                           {
                               alert("You Must Upload MCC Document");
                               e.preventDefault();
                           }
                           if (value.name.indexOf("MCC") >= 0)
                           {
                               $('#DocumentType').prop('value', "MCC No Objection Letter");
                           }
                       }
                       if(index == 1)
                       {
                           if (value.name.indexOf("PSA") < 0)
                           {
                               alert("You Must Upload PSADocument Document");
                               e.preventDefault();
                           }
                           if (value.name.indexOf("PSA") >= 0)
                           {
                               $('#DocumentType').prop('value', "PSA Document");
                           }
                       }
                   }
                   else
                   {
                       if (value.name.indexOf("PSA") < 0) {
                           alert("You Must Upload PSADocument Document");
                           e.preventDefault();
                       }
                       if (value.name.indexOf("PSA") >= 0) {
                           $('#DocumentType').prop('value', "PSA Document");
                       }
                   }
                   
               });
                
           }

                       
        </script>
    }
